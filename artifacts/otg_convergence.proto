// MIT License
// 
// Copyright (c) 2021 Open Traffic Generator
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
// 

syntax = "proto3";

package otg.convergence;

import "google/protobuf/descriptor.proto";
import "google/protobuf/empty.proto";

message OpenApiMsgOpt {
  string description = 10;
}
extend google.protobuf.MessageOptions {
  optional OpenApiMsgOpt msg_meta = 50001;
}

message OpenApiFldOpt {
  string default = 10;
  bool required = 20;
  string description = 30;
}
extend google.protobuf.FieldOptions {
  optional OpenApiFldOpt fld_meta = 50002;
}

message OpenApiSvcOpt {
  string description = 10;
}
extend google.protobuf.ServiceOptions {
  optional OpenApiSvcOpt svc_meta = 50003;
}

message OpenApiRpcOpt {
  string description = 10;
}
extend google.protobuf.MethodOptions {
  optional OpenApiRpcOpt rpc_meta = 50004;
}

message ConvergenceConfig {
  option (msg_meta).description = "The container for configuration of convergence measurements.\n\nThese options may affect the resultant packet payload due to \nadditional instrumentation data.";

  Config config = 1 [
    (fld_meta).required = true,
    (fld_meta).description = "The core open traffic generator configuration"
  ];

  string event_location = 2 [
    (fld_meta).default = "",
    (fld_meta).required = false,
    (fld_meta).description = "The location from which events will be generated. "
  ];

  double rx_rate_threshold = 3 [
    (fld_meta).default = "95",
    (fld_meta).required = false,
    (fld_meta).description = "Convergence will be calculated when the rx rate of a flow passes \nbelow then above the threshold value. "
  ];

  message Convergence_event {
    enum Enum {
      LINK_UP_DOWN = 0;
      ROUTE_ADVERTISE_WITHDRAW = 1;
    }
  }
  Convergence_event.Enum convergence_event = 4 [
    (fld_meta).default = "Convergence_event.Enum.ROUTE_ADVERTISE_WITHDRAW",
    (fld_meta).required = false,
    (fld_meta).description = "Convergence will be measured when this event occurs."
  ];
}

message Config {
  option (msg_meta).description = "A container for all models that are part of the configuration.";

  repeated Port ports = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "The ports that will be configured on the traffic generator."
  ];

  repeated Lag lags = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "The lags that will be configured on the traffic generator."
  ];

  repeated Layer1 layer1 = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "The layer1 settings that will be configured on the traffic generator."
  ];

  repeated Capture captures = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "The capture settings that will be configured on the traffic generator."
  ];

  repeated Device devices = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "The emulated device settings that will be configured on the traffic generator."
  ];

  repeated Flow flows = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "The flows that will be configured on the traffic generator."
  ];

  Event events = 7 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  ConfigOptions options = 8 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message ConfigOptions {
  option (msg_meta).description = "Global configuration options.";

  PortOptions port_options = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message Port {
  option (msg_meta).description = "An abstract test port.";

  string location = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "The location of a test port.  It is the endpoint where packets will emit from.\nTest port locations can be the following:\n  - physical appliance with multiple ports\n  - physical chassis with multiple cards and ports\n  - local interface\n  - virtual machine, docker container, kubernetes cluster\n\nThe test port location format is implementation specific. Use the /results/capabilities API to determine what formats an  implementation supports for the location property.\nGet the configured location state by using the /results/port API."
  ];

  string name = 2 [
    (fld_meta).required = true,
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message PortOptions {
  option (msg_meta).description = "Common port options that apply to all configured Port objects. ";

  bool location_preemption = 1 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "Preempt all the test port locations as defined by the  Port.Port.properties.location. If the test ports defined by their location values are in use and  this value is true, the test ports will be preempted."
  ];
}

message Lag {
  option (msg_meta).description = "The container for multiple LAG ports";

  repeated LagPort ports = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string name = 2 [
    (fld_meta).required = true,
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message LagPort {
  option (msg_meta).description = "The container for a port's ethernet interface and LAG protocol settings";

  string port_name = 1 [
    (fld_meta).required = true,
    (fld_meta).description = "The name of a port object that will be part of the LAG. \n\nx-constraint:\n- /components/schemas/Port/properties/name\n"
  ];

  LagProtocol protocol = 2 [
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  DeviceEthernetBase ethernet = 3 [
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];
}

message LagProtocol {
  option (msg_meta).description = "Description missing in models";

  message Choice {
    enum Enum {
      LACP = 0;
      STATIC = 1;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.LACP",
    (fld_meta).required = true,
    (fld_meta).description = "The type of LAG protocol."
  ];

  LagLacp lacp = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  LagStatic static = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message LagStatic {
  option (msg_meta).description = "The container for static link aggregation protocol settings.";

  int32 lag_id = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "The static lag id"
  ];
}

message LagLacp {
  option (msg_meta).description = "The container for link aggregation control protocol settings.";

  int32 actor_key = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "The actor key"
  ];

  int32 actor_port_number = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "The actor port number"
  ];

  int32 actor_port_priority = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "The actor port priority"
  ];

  string actor_system_id = 4 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).required = false,
    (fld_meta).description = "The actor system id"
  ];

  int32 actor_system_priority = 5 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "The actor system priority"
  ];

  int32 lacpdu_periodic_time_interval = 6 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "This field defines how frequently LACPDUs are sent to the link partner"
  ];

  int32 lacpdu_timeout = 7 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "This timer is used to detect whether received protocol information has expired"
  ];

  message Actor_activity {
    enum Enum {
      PASSIVE = 0;
      ACTIVE = 1;
    }
  }
  Actor_activity.Enum actor_activity = 8 [
    (fld_meta).default = "Actor_activity.Enum.ACTIVE",
    (fld_meta).required = false,
    (fld_meta).description = "Sets the value of LACP actor activity as either passive or active\nPassive indicates the port's preference for not transmitting  LACPDUs unless its partner's control is Active\nActive indicates the port's preference to participate in the  protocol regardless of the partner's control value"
  ];
}

message DeviceEthernetBase {
  option (msg_meta).description = "Base ethernet interface";

  string mac = 1 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).required = false,
    (fld_meta).description = "Media access control address"
  ];

  int32 mtu = 2 [
    (fld_meta).default = "1500",
    (fld_meta).required = false,
    (fld_meta).description = "Maximum transmission unit"
  ];

  repeated DeviceVlan vlans = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "List of VLANs"
  ];

  string name = 4 [
    (fld_meta).required = true,
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message DeviceEthernet {
  option (msg_meta).description = "An ethernet interface with an IPv4 and IPv6 interface stack\nBase ethernet interface";

  DeviceIpv4 ipv4 = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  DeviceIpv6 ipv6 = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string mac = 3 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).required = false,
    (fld_meta).description = "Media access control address"
  ];

  int32 mtu = 4 [
    (fld_meta).default = "1500",
    (fld_meta).required = false,
    (fld_meta).description = "Maximum transmission unit"
  ];

  repeated DeviceVlan vlans = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "List of VLANs"
  ];

  string name = 6 [
    (fld_meta).required = true,
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message DeviceVlan {
  option (msg_meta).description = "Emulated VLAN protocol";

  message Tpid {
    enum Enum {
      X8100 = 0;
      X88A8 = 1;
      X9100 = 2;
      X9200 = 3;
      X9300 = 4;
    }
  }
  Tpid.Enum tpid = 1 [
    (fld_meta).default = "Tpid.Enum.X8100",
    (fld_meta).required = false,
    (fld_meta).description = "Tag protocol identifier"
  ];

  int32 priority = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Priority code point"
  ];

  int32 id = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "VLAN identifier"
  ];

  string name = 4 [
    (fld_meta).required = true,
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message DeviceIpv4 {
  option (msg_meta).description = "An IPv4 interface with gateway\nA base IPv4 interface";

  string gateway = 1 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).required = false,
    (fld_meta).description = "The IPv4 address of the gateway"
  ];

  string address = 2 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).required = false,
    (fld_meta).description = "The IPv4 address"
  ];

  int32 prefix = 3 [
    (fld_meta).default = "24",
    (fld_meta).required = false,
    (fld_meta).description = "The prefix of the IPv4 address"
  ];

  DeviceBgpv4 bgpv4 = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string name = 5 [
    (fld_meta).required = true,
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message DeviceBgpv4 {
  option (msg_meta).description = "Container for emulated BGPv4 peers and routes.\nContainer for basic emulated BGP peer settings.";

  string local_address = 1 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).required = false,
    (fld_meta).description = "Local IPv4 address of the emulated router"
  ];

  string dut_address = 2 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).required = false,
    (fld_meta).description = "IPv4 address of the BGP peer for the session"
  ];

  string router_id = 3 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).required = false,
    (fld_meta).description = "The BGP router ID is a unique identifier used by routing protocols. It is a 32-bit value that is often represented by an IPv4 address."
  ];

  message As_type {
    enum Enum {
      IBGP = 0;
      EBGP = 1;
    }
  }
  As_type.Enum as_type = 4 [
    (fld_meta).default = "As_type.Enum.IBGP",
    (fld_meta).required = false,
    (fld_meta).description = "The type of BGP autonomous system. External BGP is used for BGP links between two or more autonomous systems (ebgp) Internal BGP is used within a single autonomous system (ibgp). BGP property defaults are aligned with this object defined as an internal BGP peer. If the as_type is specified as ebgp then other properties will need to be specified according an external BGP peer."
  ];

  int32 as_number = 5 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Autonomous System Number (AS number or ASN)"
  ];

  message As_number_width {
    enum Enum {
      TWO = 0;
      FOUR = 1;
    }
  }
  As_number_width.Enum as_number_width = 6 [
    (fld_meta).default = "As_number_width.Enum.FOUR",
    (fld_meta).required = false,
    (fld_meta).description = "The width in bytes of the as_number values. Any as_number values that exceed the width MUST result in an error"
  ];

  message As_number_set_mode {
    enum Enum {
      DO_NOT_INCLUDE_AS = 0;
      INCLUDE_AS_SEQ = 1;
      INCLUDE_AS_SET = 2;
      INCLUDE_AS_SEQ_CONFED = 3;
      INCLUDE_AS_SET_CONFED = 4;
      PREPEND_AS_TO_FIRST_SEGMENT = 5;
    }
  }
  As_number_set_mode.Enum as_number_set_mode = 7 [
    (fld_meta).default = "As_number_set_mode.Enum.DO_NOT_INCLUDE_AS",
    (fld_meta).required = false,
    (fld_meta).description = "The AS number set mode"
  ];

  DeviceBgpAdvanced advanced = 8 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  DeviceBgpCapability capability = 9 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated DeviceBgpSrTePolicy sr_te_policies = 10 [
    (fld_meta).required = false,
    (fld_meta).description = "Segment routing/traffic engineering policies"
  ];

  repeated DeviceBgpv4Route bgpv4_routes = 11 [
    (fld_meta).required = false,
    (fld_meta).description = "Emulated BGPv4 routes"
  ];

  repeated DeviceBgpv6Route bgpv6_routes = 12 [
    (fld_meta).required = false,
    (fld_meta).description = "Emulated BGPv6 routes"
  ];

  string name = 13 [
    (fld_meta).required = true,
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];

  bool active = 14 [
    (fld_meta).default = "True",
    (fld_meta).required = false,
    (fld_meta).description = "If enabled means that this part of the configuration including any active 'children' nodes will be advertised to peer.  If disabled, this means that though config is present, it is not taking any part of the test but can be activated at run-time to advertise just this part of the configuration to the peer."
  ];
}

message DeviceBgpAdvanced {
  option (msg_meta).description = "Container for BGP advanced settings.";

  int32 hold_time_interval = 1 [
    (fld_meta).default = "90",
    (fld_meta).required = false,
    (fld_meta).description = "Number of seconds the sender proposes for the value of the Hold Timer"
  ];

  int32 keep_alive_interval = 2 [
    (fld_meta).default = "30",
    (fld_meta).required = false,
    (fld_meta).description = "Number of seconds between transmissions of Keep Alive messages by router"
  ];

  int32 update_interval = 3 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "The time interval at which UPDATE messages are sent to the DUT, expressed as the number of milliseconds between UPDATE messages."
  ];

  int32 time_to_live = 4 [
    (fld_meta).default = "64",
    (fld_meta).required = false,
    (fld_meta).description = "The limited number of iterations that a unit of data can experience before the data is discarded. This is placed in the TTL field in the IP header of the  transmitted packets."
  ];

  string md5_key = 5 [
    (fld_meta).default = "",
    (fld_meta).required = false,
    (fld_meta).description = "The value to be used as a secret MD5 key for authentication. If null or an empty string then authentication will not be enabled."
  ];
}

message DeviceBgpCapability {
  option (msg_meta).description = "Container for BGP capability settings.";

  bool vpls = 1 [
    (fld_meta).default = "True",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool route_refresh = 2 [
    (fld_meta).default = "True",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool route_constraint = 3 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool link_state_non_vpn = 4 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool link_state_vpn = 5 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool evpn = 6 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool extended_next_hop_encoding = 7 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool ipv4_unicast = 8 [
    (fld_meta).default = "True",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool ipv4_multicast = 9 [
    (fld_meta).default = "True",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool ipv4_multicast_vpn = 10 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool ipv4_mpls_vpn = 11 [
    (fld_meta).default = "True",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool ipv4_mdt = 12 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool ipv4_multicast_mpls_vpn = 13 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool ipv4_unicast_flow_spec = 14 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool ipv4_sr_te_policy = 15 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool ipv4_unicast_add_path = 16 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool ipv6_unicast = 17 [
    (fld_meta).default = "True",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool ipv6_multicast = 18 [
    (fld_meta).default = "True",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool ipv6_multicast_vpn = 19 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool ipv6_mpls_vpn = 20 [
    (fld_meta).default = "True",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool ipv6_mdt = 21 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool ipv6_multicast_mpls_vpn = 22 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool ipv6_unicast_flow_spec = 23 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool ipv6_sr_te_policy = 24 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool ipv6_unicast_add_path = 25 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];
}

message DeviceBgpSrTePolicy {
  option (msg_meta).description = "Container for BGP basic segment routing traffic engineering policy \nsettings.\n";

  message Policy_type {
    enum Enum {
      IPV4 = 0;
      IPV6 = 1;
    }
  }
  Policy_type.Enum policy_type = 1 [
    (fld_meta).default = "Policy_type.Enum.IPV4",
    (fld_meta).required = false,
    (fld_meta).description = "Address family indicator (AFI)."
  ];

  int32 distinguisher = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Identifies the policy in the context of (color and endpoint) tuple.  It is used by the SR Policy originator to make unique multiple  occurrences of the same SR Policy."
  ];

  int32 color = 3 [
    (fld_meta).default = "100",
    (fld_meta).required = false,
    (fld_meta).description = "Identifies the policy. It is used to match the color of the  destination prefixes to steer traffic into the SR Policy. "
  ];

  string ipv4_endpoint = 4 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).required = false,
    (fld_meta).description = "Specifies a single node or a set of nodes. It is selected on the basis of the policy_type (AFI)."
  ];

  string ipv6_endpoint = 5 [
    (fld_meta).default = "::0",
    (fld_meta).required = false,
    (fld_meta).description = "Specifies a single node or a set of nodes. It is selected on the basis of the policy_type (AFI)."
  ];

  DeviceBgpSrTePolicyNextHop next_hop = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  DeviceBgpAddPath add_path = 7 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  DeviceBgpAsPath as_path = 8 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated DeviceBgpTunnelTlv tunnel_tlvs = 9 [
    (fld_meta).required = false,
    (fld_meta).description = "Optional tunnel TLV settings"
  ];

  repeated DeviceBgpCommunity communities = 10 [
    (fld_meta).required = false,
    (fld_meta).description = "Optional community settings"
  ];
}

message DeviceBgpSrTePolicyNextHop {
  option (msg_meta).description = "Optional container for BGP SR TE Policy next hop settings.";

  message Next_hop_mode {
    enum Enum {
      LOCAL_IP = 0;
      MANUAL = 1;
    }
  }
  Next_hop_mode.Enum next_hop_mode = 1 [
    (fld_meta).default = "Next_hop_mode.Enum.LOCAL_IP",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  message Next_hop_address_type {
    enum Enum {
      IPV4 = 0;
      IPV6 = 1;
    }
  }
  Next_hop_address_type.Enum next_hop_address_type = 2 [
    (fld_meta).default = "Next_hop_address_type.Enum.IPV4",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  string ipv4_address = 3 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).required = false,
    (fld_meta).description = "The IPv4 address of the next hop if the next_hop_mode is manual and the next_hop_address_type is IPv4."
  ];

  string ipv6_address = 4 [
    (fld_meta).default = "::0",
    (fld_meta).required = false,
    (fld_meta).description = "The IPv6 address of the next hop if the next_hop_mode is manual and the next_hop_address_type is IPv6."
  ];
}

message DeviceBgpAddPath {
  option (msg_meta).description = "The BGP Additional Paths feature is a BGP extension that allows the  advertisement of multiple paths for the same prefix without the new  paths implicitly replacing any previous paths.";

  int32 path_id = 1 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "The id of the additional path."
  ];
}

message DeviceBgpAsPath {
  option (msg_meta).description = "Autonomous Systems (AS) numbers that a route passes through to reach  the destination";

  bool override_peer_as_set_mode = 1 [
    (fld_meta).default = "True",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  message As_set_mode {
    enum Enum {
      DO_NOT_INCLUDE_LOCAL_AS = 0;
      INCLUDE_AS_SEQ = 1;
      INCLUDE_AS_SET = 2;
      INCLUDE_AS_CONFED_SEQ = 3;
      INCLUDE_AS_CONFED_SET = 4;
      PREPEND_TO_FIRST_SEGMENT = 5;
    }
  }
  As_set_mode.Enum as_set_mode = 2 [
    (fld_meta).default = "As_set_mode.Enum.DO_NOT_INCLUDE_LOCAL_AS",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  repeated DeviceBgpAsPathSegment as_path_segments = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "The AS path segments (non random) per route range"
  ];
}

message DeviceBgpAsPathSegment {
  option (msg_meta).description = "Container for a single BGP AS path segment";

  message Segment_type {
    enum Enum {
      AS_SEQ = 0;
      AS_SET = 1;
      AS_CONFED_SEQ = 2;
      AS_CONFED_SET = 3;
    }
  }
  Segment_type.Enum segment_type = 1 [
    (fld_meta).default = "Segment_type.Enum.AS_SEQ",
    (fld_meta).required = false,
    (fld_meta).description = "AS sequence is the most common type of AS_PATH, it contains the  list of ASNs starting with the most recent ASN being added read  from left to right.\nThe other three AS_PATH types are used for Confederations - AS_SET is the type of AS_PATH attribute that summarizes routes using using the aggregate-address command, allowing AS_PATHs to be  summarized in the update as well. - AS_CONFED_SEQ gives the list of ASNs in the path starting with the  most recent ASN to be added reading left to right - AS_CONFED_SET will allow summarization of multiple AS PATHs to be  sent in BGP Updates."
  ];

  repeated int32 as_numbers = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "The AS numbers in this AS path segment."
  ];
}

message DeviceBgpTunnelTlv {
  option (msg_meta).description = "Container for BGP tunnel TLV settings.";

  repeated DeviceBgpSegmentList segment_lists = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  DeviceBgpRemoteEndpointSubTlv remote_endpoint_sub_tlv = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  DeviceBgpPreferenceSubTlv preference_sub_tlv = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  DeviceBgpBindingSubTlv binding_sub_tlv = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  DeviceBgpExplicitNullLabelPolicySubTlv explicit_null_label_policy_sub_tlv = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  bool active = 6 [
    (fld_meta).default = "True",
    (fld_meta).required = false,
    (fld_meta).description = "If enabled means that this part of the configuration including any active 'children' nodes will be advertised to peer.  If disabled, this means that though config is present, it is not taking any part of the test but can be activated at run-time to advertise just this part of the configuration to the peer."
  ];
}

message DeviceBgpSegmentList {
  option (msg_meta).description = "Optional container for BGP SR TE Policy segment list settings.";

  int32 segment_weight = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "The weight associated with a given path."
  ];

  repeated DeviceBgpSegment segments = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  bool active = 3 [
    (fld_meta).default = "True",
    (fld_meta).required = false,
    (fld_meta).description = "If enabled means that this part of the configuration including any active 'children' nodes will be advertised to peer.  If disabled, this means that though config is present, it is not taking any part of the test but can be activated at run-time to advertise just this part of the configuration to the peer."
  ];
}

message DeviceBgpSegment {
  option (msg_meta).description = "Optional container for BGP SR TE Policy segment settings.";

  message Segment_type {
    enum Enum {
      MPLS_SID = 0;
      IPV6_SID = 1;
    }
  }
  Segment_type.Enum segment_type = 1 [
    (fld_meta).default = "Segment_type.Enum.MPLS_SID",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  int32 mpls_label = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "MPLS label"
  ];

  int32 mpls_tc = 3 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  int32 mpls_ttl = 4 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool v_flag = 5 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  string ipv6_sid = 6 [
    (fld_meta).default = "::0",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  int32 remaining_flag_bits = 7 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool active = 8 [
    (fld_meta).default = "True",
    (fld_meta).required = false,
    (fld_meta).description = "If enabled means that this part of the configuration including any active 'children' nodes will be advertised to peer.  If disabled, this means that though config is present, it is not taking any part of the test but can be activated at run-time to advertise just this part of the configuration to the peer."
  ];
}

message DeviceBgpRemoteEndpointSubTlv {
  option (msg_meta).description = "Container for BGP remote endpoint sub TLV settings.";

  int32 as_number = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Autonomous system (AS) number"
  ];

  message Address_family {
    enum Enum {
      IPV4 = 0;
      IPV6 = 1;
    }
  }
  Address_family.Enum address_family = 2 [
    (fld_meta).default = "Address_family.Enum.IPV4",
    (fld_meta).required = false,
    (fld_meta).description = "Determines the address type"
  ];

  string ipv4_address = 3 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).required = false,
    (fld_meta).description = "The IPv4 address"
  ];

  string ipv6_address = 4 [
    (fld_meta).default = "::0",
    (fld_meta).required = false,
    (fld_meta).description = "The IPv6 address"
  ];
}

message DeviceBgpPreferenceSubTlv {
  option (msg_meta).description = "Container for BGP preference sub TLV settings.";

  int32 preference = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];
}

message DeviceBgpBindingSubTlv {
  option (msg_meta).description = "Container for BGP binding sub TLV settings.";

  message Binding_sid_type {
    enum Enum {
      NO_BINDING = 0;
      FOUR_OCTET_SID = 1;
      IPV6_SID = 2;
    }
  }
  Binding_sid_type.Enum binding_sid_type = 1 [
    (fld_meta).default = "Binding_sid_type.Enum.NO_BINDING",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  int32 four_octet_sid = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool bsid_as_mpls_label = 3 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "Only valid if binding_sid_type is four_octet_sid"
  ];

  string ipv6_sid = 4 [
    (fld_meta).default = "::0",
    (fld_meta).required = false,
    (fld_meta).description = "Only valid if binding_sid_type is ipv6_sid"
  ];

  bool s_flag = 5 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool i_flag = 6 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  int32 remaining_flag_bits = 7 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];
}

message DeviceBgpExplicitNullLabelPolicySubTlv {
  option (msg_meta).description = "Container for BGP explicit null label policy sub TLV settings.";

  message Explicit_null_label_policy {
    enum Enum {
      RESERVED_ENLP = 0;
      PUSH_IPV4_ENLP = 1;
      PUSH_IPV6_ENLP = 2;
      PUSH_IPV4_IPV6_ENLP = 3;
      DO_NOT_PUSH_ENLP = 4;
    }
  }
  Explicit_null_label_policy.Enum explicit_null_label_policy = 1 [
    (fld_meta).default = "Explicit_null_label_policy.Enum.DO_NOT_PUSH_ENLP",
    (fld_meta).required = false,
    (fld_meta).description = "The value of the explicit null label policy "
  ];
}

message DeviceBgpCommunity {
  option (msg_meta).description = "BGP communities provide additional capability for tagging routes and  for modifying BGP routing policy on upstream and downstream routers BGP community is a 32-bit number which broken into 16-bit AS number and  a 16-bit custom value";

  message Community_type {
    enum Enum {
      MANUAL_AS_NUMBER = 0;
      NO_EXPORT = 1;
      NO_ADVERTISED = 2;
      NO_EXPORT_SUBCONFED = 3;
      LLGR_STALE = 4;
      NO_LLGR = 5;
    }
  }
  Community_type.Enum community_type = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "The type of community AS number."
  ];

  int32 as_number = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "First two octets of 32 bit community AS number"
  ];

  int32 as_custom = 3 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Last two octets of the community AS number "
  ];
}

message DeviceBgpv4Route {
  option (msg_meta).description = "Emulated BGPv4 route\nContainer for BGP route ranges.";

  repeated DeviceBgpv4RouteAddress addresses = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "A list of symmetrical or asymmetrical route addresses"
  ];

  string next_hop_address = 2 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).required = false,
    (fld_meta).description = "IP Address of next router to forward a packet to its final destination"
  ];

  DeviceBgpRouteAdvanced advanced = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated DeviceBgpCommunity communities = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Optional community settings."
  ];

  DeviceBgpAsPath as_path = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  DeviceBgpAddPath add_path = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string name = 7 [
    (fld_meta).required = true,
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message DeviceBgpv4RouteAddress {
  option (msg_meta).description = "A container for BGPv4 route addresses";

  string address = 1 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).required = false,
    (fld_meta).description = "The starting address of the network"
  ];

  int32 prefix = 2 [
    (fld_meta).default = "24",
    (fld_meta).required = false,
    (fld_meta).description = "The IPv4 network prefix to be applied to the address. "
  ];

  string count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "The total number of addresses in the range"
  ];

  string step = 4 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "The amount to increase each address by"
  ];
}

message DeviceBgpRouteAdvanced {
  option (msg_meta).description = "Container for advanced BGP route range settings";

  int32 multi_exit_discriminator = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "The multi exit discriminator (MED) value.  A null value means the MED feature is not enabled."
  ];

  message Origin {
    enum Enum {
      IGP = 0;
      EGP = 1;
    }
  }
  Origin.Enum origin = 2 [
    (fld_meta).default = "Origin.Enum.IGP",
    (fld_meta).required = false,
    (fld_meta).description = "The origin value.  A null value means the origin feature is not enabled."
  ];
}

message DeviceBgpv6Route {
  option (msg_meta).description = "Emulated BGPv6 route\nContainer for BGP route ranges.";

  repeated DeviceBgpv6RouteAddress addresses = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "A list of symmetrical or asymmetrical route addresses"
  ];

  string next_hop_address = 2 [
    (fld_meta).default = "::0",
    (fld_meta).required = false,
    (fld_meta).description = "IP Address of next router to forward a packet to its final destination"
  ];

  DeviceBgpRouteAdvanced advanced = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated DeviceBgpCommunity communities = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Optional community settings."
  ];

  DeviceBgpAsPath as_path = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  DeviceBgpAddPath add_path = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string name = 7 [
    (fld_meta).required = true,
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message DeviceBgpv6RouteAddress {
  option (msg_meta).description = "A container for BGPv6 route addressses";

  string address = 1 [
    (fld_meta).default = "::0",
    (fld_meta).required = false,
    (fld_meta).description = "The starting address of the network"
  ];

  int32 prefix = 2 [
    (fld_meta).default = "64",
    (fld_meta).required = false,
    (fld_meta).description = "The IPv6 network prefix to be applied to the address"
  ];

  string count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "The total number of addresses in the range"
  ];

  string step = 4 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "The amount to increase each address by"
  ];
}

message DeviceIpv6 {
  option (msg_meta).description = "An IPv6 interface with gateway\nA base IPv6 interface";

  string gateway = 1 [
    (fld_meta).default = "::0",
    (fld_meta).required = false,
    (fld_meta).description = "The IPv6 gateway address"
  ];

  string address = 2 [
    (fld_meta).default = "::0",
    (fld_meta).required = false,
    (fld_meta).description = "The IPv6 address."
  ];

  int32 prefix = 3 [
    (fld_meta).default = "64",
    (fld_meta).required = false,
    (fld_meta).description = "The network prefix."
  ];

  DeviceBgpv6 bgpv6 = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string name = 5 [
    (fld_meta).required = true,
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message DeviceBgpv6 {
  option (msg_meta).description = "Container for BGPv6 peer settings and routes.\nContainer for basic emulated BGP peer settings.";

  string local_address = 1 [
    (fld_meta).default = "::0",
    (fld_meta).required = false,
    (fld_meta).description = "Local IPv6 address of the emulated router"
  ];

  string dut_address = 2 [
    (fld_meta).default = "::0",
    (fld_meta).required = false,
    (fld_meta).description = "IPv6 address of the BGP peer for the session"
  ];

  DeviceBgpv6SegmentRouting segment_routing = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string router_id = 4 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).required = false,
    (fld_meta).description = "The BGP router ID is a unique identifier used by routing protocols. It is a 32-bit value that is often represented by an IPv4 address."
  ];

  message As_type {
    enum Enum {
      IBGP = 0;
      EBGP = 1;
    }
  }
  As_type.Enum as_type = 5 [
    (fld_meta).default = "As_type.Enum.IBGP",
    (fld_meta).required = false,
    (fld_meta).description = "The type of BGP autonomous system. External BGP is used for BGP links between two or more autonomous systems (ebgp) Internal BGP is used within a single autonomous system (ibgp). BGP property defaults are aligned with this object defined as an internal BGP peer. If the as_type is specified as ebgp then other properties will need to be specified according an external BGP peer."
  ];

  int32 as_number = 6 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Autonomous System Number (AS number or ASN)"
  ];

  message As_number_width {
    enum Enum {
      TWO = 0;
      FOUR = 1;
    }
  }
  As_number_width.Enum as_number_width = 7 [
    (fld_meta).default = "As_number_width.Enum.FOUR",
    (fld_meta).required = false,
    (fld_meta).description = "The width in bytes of the as_number values. Any as_number values that exceed the width MUST result in an error"
  ];

  message As_number_set_mode {
    enum Enum {
      DO_NOT_INCLUDE_AS = 0;
      INCLUDE_AS_SEQ = 1;
      INCLUDE_AS_SET = 2;
      INCLUDE_AS_SEQ_CONFED = 3;
      INCLUDE_AS_SET_CONFED = 4;
      PREPEND_AS_TO_FIRST_SEGMENT = 5;
    }
  }
  As_number_set_mode.Enum as_number_set_mode = 8 [
    (fld_meta).default = "As_number_set_mode.Enum.DO_NOT_INCLUDE_AS",
    (fld_meta).required = false,
    (fld_meta).description = "The AS number set mode"
  ];

  DeviceBgpAdvanced advanced = 9 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  DeviceBgpCapability capability = 10 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated DeviceBgpSrTePolicy sr_te_policies = 11 [
    (fld_meta).required = false,
    (fld_meta).description = "Segment routing/traffic engineering policies"
  ];

  repeated DeviceBgpv4Route bgpv4_routes = 12 [
    (fld_meta).required = false,
    (fld_meta).description = "Emulated BGPv4 routes"
  ];

  repeated DeviceBgpv6Route bgpv6_routes = 13 [
    (fld_meta).required = false,
    (fld_meta).description = "Emulated BGPv6 routes"
  ];

  string name = 14 [
    (fld_meta).required = true,
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];

  bool active = 15 [
    (fld_meta).default = "True",
    (fld_meta).required = false,
    (fld_meta).description = "If enabled means that this part of the configuration including any active 'children' nodes will be advertised to peer.  If disabled, this means that though config is present, it is not taking any part of the test but can be activated at run-time to advertise just this part of the configuration to the peer."
  ];
}

message DeviceBgpv6SegmentRouting {
  option (msg_meta).description = "Container for BGPv6 segment routing settings.";

  bool ingress_supports_vpn = 1 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool reduced_encapsulation = 2 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool copy_time_to_live = 3 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  int32 time_to_live = 4 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  int32 max_sids_per_srh = 5 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool auto_generate_segment_left_value = 6 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  int32 segment_left_value = 7 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];

  bool advertise_sr_te_policy = 8 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "TBD"
  ];
}

message Layer1 {
  option (msg_meta).description = "A container for layer1 settings.";

  repeated string port_names = 1 [
    (fld_meta).required = true,
    (fld_meta).description = "A list of unique names of port objects that will share the choice settings. \n\nx-constraint:\n- /components/schemas/Port/properties/name\n"
  ];

  message Speed {
    enum Enum {
      SPEED_10_FD_MBPS = 0;
      SPEED_10_HD_MBPS = 1;
      SPEED_100_FD_MBPS = 2;
      SPEED_100_HD_MBPS = 3;
      SPEED_1_GBPS = 4;
      SPEED_10_GBPS = 5;
      SPEED_25_GBPS = 6;
      SPEED_40_GBPS = 7;
      SPEED_100_GBPS = 8;
      SPEED_200_GBPS = 9;
      SPEED_400_GBPS = 10;
    }
  }
  Speed.Enum speed = 2 [
    (fld_meta).default = "Speed.Enum.SPEED_10_GBPS",
    (fld_meta).required = false,
    (fld_meta).description = "Set the speed if supported."
  ];

  message Media {
    enum Enum {
      COPPER = 0;
      FIBER = 1;
      SGMII = 2;
    }
  }
  Media.Enum media = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Set the type of media interface if supported."
  ];

  bool promiscuous = 4 [
    (fld_meta).default = "True",
    (fld_meta).required = false,
    (fld_meta).description = "Enable promiscuous mode if supported."
  ];

  int32 mtu = 5 [
    (fld_meta).default = "1500",
    (fld_meta).required = false,
    (fld_meta).description = "Set the maximum transmission unit size if supported."
  ];

  bool ieee_media_defaults = 6 [
    (fld_meta).default = "True",
    (fld_meta).required = false,
    (fld_meta).description = "Set to true to override the auto_negotiate, link_training and rs_fec settings for gigabit ethernet interfaces."
  ];

  bool auto_negotiate = 7 [
    (fld_meta).default = "True",
    (fld_meta).required = false,
    (fld_meta).description = "Enable/disable auto negotiation."
  ];

  Layer1AutoNegotiation auto_negotiation = 8 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  Layer1FlowControl flow_control = 9 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string name = 10 [
    (fld_meta).required = true,
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message Layer1AutoNegotiation {
  option (msg_meta).description = "Container for auto negotiation settings";

  bool advertise_1000_mbps = 1 [
    (fld_meta).default = "True",
    (fld_meta).required = false,
    (fld_meta).description = "If auto_negotiate is true and the interface supports this option then this speed will be advertised."
  ];

  bool advertise_100_fd_mbps = 2 [
    (fld_meta).default = "True",
    (fld_meta).required = false,
    (fld_meta).description = "If auto_negotiate is true and the interface supports this option then this speed will be advertised."
  ];

  bool advertise_100_hd_mbps = 3 [
    (fld_meta).default = "True",
    (fld_meta).required = false,
    (fld_meta).description = "If auto_negotiate is true and the interface supports this option then this speed will be advertised."
  ];

  bool advertise_10_fd_mbps = 4 [
    (fld_meta).default = "True",
    (fld_meta).required = false,
    (fld_meta).description = "If auto_negotiate is true and the interface supports this option then this speed will be advertised."
  ];

  bool advertise_10_hd_mbps = 5 [
    (fld_meta).default = "True",
    (fld_meta).required = false,
    (fld_meta).description = "If auto_negotiate is true and the interface supports this option then this speed will be advertised."
  ];

  bool link_training = 6 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "Enable/disable gigabit ethernet link training."
  ];

  bool rs_fec = 7 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "Enable/disable gigabit ethernet reed solomon forward error correction (RS FEC)."
  ];
}

message Layer1FlowControl {
  option (msg_meta).description = "A container for layer1 receive flow control settings. To enable flow control settings on ports this object must be a valid object not a null value.";

  string directed_address = 1 [
    (fld_meta).default = "0180C2000001",
    (fld_meta).required = false,
    (fld_meta).description = "The 48bit mac address that the layer1 port names will listen on for a directed pause.  "
  ];

  message Choice {
    enum Enum {
      IEEE_802_1QBB = 0;
      IEEE_802_3X = 1;
    }
  }
  Choice.Enum choice = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "The type of priority flow control."
  ];

  Layer1Ieee8021qbb ieee_802_1qbb = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  Layer1Ieee8023x ieee_802_3x = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message Layer1Ieee8023x {
  option (msg_meta).description = "A container for ieee 802.3x rx pause settings";
}

message Layer1Ieee8021qbb {
  option (msg_meta).description = "These settings enhance the existing 802.3x pause priority capabilities  to enable flow control based on 802.1p priorities (classes of service). ";

  int32 pfc_delay = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "The upper limit on the transmit time of a queue after receiving a  message to pause a specified priority. A value of 0 or null indicates that pfc delay will not be enabled. "
  ];

  int32 pfc_class_0 = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "The valid values are null, 0 - 7. A null value indicates there is no setting for this pfc class."
  ];

  int32 pfc_class_1 = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "The valid values are null, 0 - 7. A null value indicates there is no setting for this pfc class."
  ];

  int32 pfc_class_2 = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "The valid values are null, 0 - 7. A null value indicates there is no setting for this pfc class."
  ];

  int32 pfc_class_3 = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "The valid values are null, 0 - 7. A null value indicates there is no setting for this pfc class."
  ];

  int32 pfc_class_4 = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "The valid values are null, 0 - 7. A null value indicates there is no setting for this pfc class."
  ];

  int32 pfc_class_5 = 7 [
    (fld_meta).required = false,
    (fld_meta).description = "The valid values are null, 0 - 7. A null value indicates there is no setting for this pfc class."
  ];

  int32 pfc_class_6 = 8 [
    (fld_meta).required = false,
    (fld_meta).description = "The valid values are null, 0 - 7. A null value indicates there is no setting for this pfc class."
  ];

  int32 pfc_class_7 = 9 [
    (fld_meta).required = false,
    (fld_meta).description = "The valid values are null, 0 - 7. A null value indicates there is no setting for this pfc class."
  ];
}

message Capture {
  option (msg_meta).description = "Container for capture settings.";

  repeated string port_names = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "The unique names of ports that the capture settings will apply to. Port_names cannot be duplicated between capture objects.\n\nx-constraint:\n- /components/schemas/Port/properties/name\n"
  ];

  repeated CaptureFilter filters = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "A list of filters to apply to the capturing ports. If no filters are specified then all packets will be captured. A capture can have multiple filters. The number of filters supported is determined by the implementation which can be retrieved using the capabilities API.\nWhen multiple filters are specified the capture implementation  must && (and) all the filters."
  ];

  bool overwrite = 3 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "Overwrite the capture buffer."
  ];

  int32 packet_size = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "The maximum size of each captured packet. If no value is specified or it is null then the entire packet will be captured."
  ];

  message Format {
    enum Enum {
      PCAP = 0;
      PCAPNG = 1;
    }
  }
  Format.Enum format = 5 [
    (fld_meta).default = "Format.Enum.PCAP",
    (fld_meta).required = false,
    (fld_meta).description = "The format of the capture file."
  ];

  string name = 6 [
    (fld_meta).required = true,
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message CaptureFilter {
  option (msg_meta).description = "Container for capture filters";

  message Choice {
    enum Enum {
      CUSTOM = 0;
      ETHERNET = 1;
      VLAN = 2;
      IPV4 = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  CaptureCustom custom = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Offset from last filter in the list. If no filters are present it is offset from position 0. Multiple custom filters can be present, the length of each custom filter is the length of the value being filtered."
  ];

  CaptureEthernet ethernet = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  CaptureVlan vlan = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  CaptureIpv4 ipv4 = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message CaptureCustom {
  option (msg_meta).description = "Description missing in models";

  int32 offset = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "The byte offset to filter on"
  ];

  string value = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string mask = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  bool negate = 4 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message CaptureField {
  option (msg_meta).description = "Description missing in models";

  string value = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string mask = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  bool negate = 3 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message CaptureEthernet {
  option (msg_meta).description = "Description missing in models";

  CaptureField src = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  CaptureField dst = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  CaptureField ether_type = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  CaptureField pfc_queue = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message CaptureVlan {
  option (msg_meta).description = "Description missing in models";

  CaptureField priority = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  CaptureField cfi = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  CaptureField id = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  CaptureField protocol = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message CaptureIpv4 {
  option (msg_meta).description = "Description missing in models";

  CaptureField version = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  CaptureField headeer_length = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  CaptureField priority = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  CaptureField total_length = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  CaptureField identification = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  CaptureField reserved = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  CaptureField dont_fragment = 7 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  CaptureField more_fragments = 8 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  CaptureField fragment_offset = 9 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  CaptureField time_to_live = 10 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  CaptureField protocol = 11 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  CaptureField header_checksum = 12 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  CaptureField src = 13 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  CaptureField dst = 14 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message Device {
  option (msg_meta).description = "A container for emulated interfaces and protocol devices.";

  string container_name = 1 [
    (fld_meta).required = true,
    (fld_meta).description = "The unique name of a Port or Lag object that will contain the  emulated interfaces and/or protocol devices.\n\nx-constraint:\n- /components/schemas/Port/properties/name\n- /components/schemas/Lag/properties/name\n"
  ];

  DeviceEthernet ethernet = 2 [
    (fld_meta).required = true,
    (fld_meta).description = "The ethernet stack."
  ];

  string name = 3 [
    (fld_meta).required = true,
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message Flow {
  option (msg_meta).description = "A high level data plane traffic flow.";

  FlowTxRx tx_rx = 1 [
    (fld_meta).required = true,
    (fld_meta).description = "The transmit and receive endpoints."
  ];

  repeated FlowHeader packet = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "The header is a list of traffic protocol headers.\n\nThe order of traffic protocol headers assigned to the list is the\norder they will appear on the wire.\n\nIn the case of an empty list the keyword/value of minItems: 1 \nindicates that an implementation MUST provide at least one \nFlow.Header object.\n\nThe default value for the Flow.Header choice property is ethernet \nwhich will result in an implementation by default providing at least \none ethernet packet header."
  ];

  FlowSize size = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "The size of the packets."
  ];

  FlowRate rate = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "The transmit rate of the packets."
  ];

  FlowDuration duration = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "The transmit duration of the packets."
  ];

  FlowMetrics metrics = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Flow metrics. "
  ];

  string name = 7 [
    (fld_meta).required = true,
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message FlowTxRx {
  option (msg_meta).description = "A container for different types of transmit and receive  endpoint containers.";

  message Choice {
    enum Enum {
      PORT = 0;
      DEVICE = 1;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).required = true,
    (fld_meta).description = "The type of transmit and receive container used by the flow."
  ];

  FlowPort port = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowDevice device = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowPort {
  option (msg_meta).description = "A container for a transmit port and 0..n intended receive ports. When assigning this container to a flow the flows's  packet headers will not be populated with any address resolution  information such as source and/or destination addresses.  For example Flow.Ethernet dst mac address values will be defaulted to 0.  For full control over the Flow.properties.packet header contents use this  container. ";

  string tx_name = 1 [
    (fld_meta).required = true,
    (fld_meta).description = "The unique name of a port that is the transmit port.\n\nx-constraint:\n- /components/schemas/Port/properties/name\n- /components/schemas/Lag/properties/name\n"
  ];

  string rx_name = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "The unique name of a port that is the intended receive port.\n\nx-constraint:\n- /components/schemas/Port/properties/name\n- /components/schemas/Lag/properties/name\n"
  ];
}

message FlowDevice {
  option (msg_meta).description = "A container for declaring a map of 1..n transmit devices to 1..n receive devices. This allows for a single flow to have  different tx to rx device flows such as a single one to one map or a  many to many map.";

  message Mode {
    enum Enum {
      MESH = 0;
      ONE_TO_ONE = 1;
    }
  }
  Mode.Enum mode = 1 [
    (fld_meta).default = "Mode.Enum.MESH",
    (fld_meta).required = true,
    (fld_meta).description = "Determines the mapping of tx_names to rx_names.\nThe mesh mode creates traffic between each value in tx_names to every value in rx_names except in the case where the individual  tx_names value is equal to rx_names value which will be ignored. Identical values in tx_names or rx_names MUST raise an error.\nThe one_to_one mode creates traffic between each value pair in  of tx_names and rx_names by index. The length of tx_names and rx_name MUST be the same. Identical values in tx_names or rx_names MUST raise an error."
  ];

  repeated string tx_names = 2 [
    (fld_meta).required = true,
    (fld_meta).description = "TBD\n\nx-constraint:\n- /components/schemas/Device.Ethernet/properties/name\n- /components/schemas/Device.Ipv4/properties/name\n- /components/schemas/Device.Ipv6/properties/name\n- /components/schemas/Device.Bgpv4RouteRange/properties/name\n- /components/schemas/Device.Bgpv6RouteRange/properties/name\n"
  ];

  repeated string rx_names = 3 [
    (fld_meta).required = true,
    (fld_meta).description = "TBD\n\nx-constraint:\n- /components/schemas/Device.Ethernet/properties/name\n- /components/schemas/Device.Ipv4/properties/name\n- /components/schemas/Device.Ipv6/properties/name\n- /components/schemas/Device.Bgpv4RouteRange/properties/name\n- /components/schemas/Device.Bgpv6RouteRange/properties/name\n"
  ];
}

message FlowHeader {
  option (msg_meta).description = "Container for all traffic packet headers";

  message Choice {
    enum Enum {
      CUSTOM = 0;
      ETHERNET = 1;
      VLAN = 2;
      VXLAN = 3;
      IPV4 = 4;
      IPV6 = 5;
      PFCPAUSE = 6;
      ETHERNETPAUSE = 7;
      TCP = 8;
      UDP = 9;
      GRE = 10;
      GTPV1 = 11;
      GTPV2 = 12;
      ARP = 13;
      ICMP = 14;
      ICMPV6 = 15;
      PPP = 16;
      IGMPV1 = 17;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.ETHERNET",
    (fld_meta).required = false,
    (fld_meta).description = "The available types of flow headers. If one is not provided the \ndefault ethernet packet header MUST be provided."
  ];

  FlowCustom custom = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowEthernet ethernet = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowVlan vlan = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowVxlan vxlan = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowIpv4 ipv4 = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowIpv6 ipv6 = 7 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowPfcPause pfcpause = 8 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowEthernetPause ethernetpause = 9 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowTcp tcp = 10 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowUdp udp = 11 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowGre gre = 12 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowGtpv1 gtpv1 = 13 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowGtpv2 gtpv2 = 14 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowArp arp = 15 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowIcmp icmp = 16 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowIcmpv6 icmpv6 = 17 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowPpp ppp = 18 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowIgmpv1 igmpv1 = 19 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowCustom {
  option (msg_meta).description = "Custom packet header";

  string bytes = 1 [
    (fld_meta).required = true,
    (fld_meta).description = "A custom packet header defined as a string of hex bytes. The string MUST contain sequence of valid hex bytes. Spaces or colons can be part of the bytes but will be discarded. This packet header can be used in multiple places in the packet."
  ];
}

message FlowEthernet {
  option (msg_meta).description = "Ethernet packet header";

  PatternFlowEthernetDst dst = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowEthernetSrc src = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowEthernetEtherType ether_type = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowEthernetPfcQueue pfc_queue = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowVlan {
  option (msg_meta).description = "VLAN packet header";

  PatternFlowVlanPriority priority = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowVlanCfi cfi = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowVlanId id = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowVlanTpid tpid = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowVxlan {
  option (msg_meta).description = "VXLAN packet header";

  PatternFlowVxlanFlags flags = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowVxlanReserved0 reserved0 = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowVxlanVni vni = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowVxlanReserved1 reserved1 = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowIpv4 {
  option (msg_meta).description = "IPv4 packet header";

  PatternFlowIpv4Version version = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4HeaderLength header_length = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowIpv4Priority priority = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4TotalLength total_length = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4Identification identification = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4Reserved reserved = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4DontFragment dont_fragment = 7 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4MoreFragments more_fragments = 8 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4FragmentOffset fragment_offset = 9 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4TimeToLive time_to_live = 10 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4Protocol protocol = 11 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4HeaderChecksum header_checksum = 12 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4Src src = 13 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4Dst dst = 14 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowIpv4Priority {
  option (msg_meta).description = "A container for ipv4 raw, tos, dscp ip priorities.";

  message Choice {
    enum Enum {
      RAW = 0;
      TOS = 1;
      DSCP = 2;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4PriorityRaw raw = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowIpv4Tos tos = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowIpv4Dscp dscp = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowIpv4Dscp {
  option (msg_meta).description = "Differentiated services code point (DSCP) packet field.";

  PatternFlowIpv4DscpPhb phb = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4DscpEcn ecn = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowIpv4Tos {
  option (msg_meta).description = "Type of service (TOS) packet field.";

  PatternFlowIpv4TosPrecedence precedence = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4TosDelay delay = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4TosThroughput throughput = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4TosReliability reliability = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4TosMonetary monetary = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4TosUnused unused = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowIpv6 {
  option (msg_meta).description = "IPv6 packet header";

  PatternFlowIpv6Version version = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv6TrafficClass traffic_class = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv6FlowLabel flow_label = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv6PayloadLength payload_length = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv6NextHeader next_header = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv6HopLimit hop_limit = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv6Src src = 7 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv6Dst dst = 8 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowPfcPause {
  option (msg_meta).description = "IEEE 802.1Qbb PFC Pause packet header.";

  PatternFlowPfcPauseDst dst = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPauseSrc src = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPauseEtherType ether_type = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPauseControlOpCode control_op_code = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPauseClassEnableVector class_enable_vector = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPausePauseClass0 pause_class_0 = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPausePauseClass1 pause_class_1 = 7 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPausePauseClass2 pause_class_2 = 8 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPausePauseClass3 pause_class_3 = 9 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPausePauseClass4 pause_class_4 = 10 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPausePauseClass5 pause_class_5 = 11 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPausePauseClass6 pause_class_6 = 12 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPausePauseClass7 pause_class_7 = 13 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowEthernetPause {
  option (msg_meta).description = "IEEE 802.3x global ethernet pause packet header";

  PatternFlowEthernetPauseDst dst = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowEthernetPauseSrc src = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowEthernetPauseEtherType ether_type = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowEthernetPauseControlOpCode control_op_code = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowEthernetPauseTime time = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowTcp {
  option (msg_meta).description = "TCP packet header";

  PatternFlowTcpSrcPort src_port = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpDstPort dst_port = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpSeqNum seq_num = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpAckNum ack_num = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpDataOffset data_offset = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpEcnNs ecn_ns = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpEcnCwr ecn_cwr = 7 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpEcnEcho ecn_echo = 8 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpCtlUrg ctl_urg = 9 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpCtlAck ctl_ack = 10 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpCtlPsh ctl_psh = 11 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpCtlRst ctl_rst = 12 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpCtlSyn ctl_syn = 13 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpCtlFin ctl_fin = 14 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpWindow window = 15 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowUdp {
  option (msg_meta).description = "UDP packet header";

  PatternFlowUdpSrcPort src_port = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowUdpDstPort dst_port = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowUdpLength length = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowUdpChecksum checksum = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowGre {
  option (msg_meta).description = "Standard GRE packet header (RFC2784)";

  PatternFlowGreChecksumPresent checksum_present = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGreReserved0 reserved0 = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGreVersion version = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGreProtocol protocol = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGreChecksum checksum = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGreReserved1 reserved1 = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowGtpv1 {
  option (msg_meta).description = "GTPv1 packet header";

  PatternFlowGtpv1Version version = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv1ProtocolType protocol_type = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv1Reserved reserved = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv1EFlag e_flag = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv1SFlag s_flag = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv1PnFlag pn_flag = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv1MessageType message_type = 7 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv1MessageLength message_length = 8 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv1Teid teid = 9 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv1SquenceNumber squence_number = 10 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv1NPduNumber n_pdu_number = 11 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv1NextExtensionHeaderType next_extension_header_type = 12 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated FlowGtpExtension extension_headers = 13 [
    (fld_meta).required = false,
    (fld_meta).description = "A list of optional extension headers."
  ];
}

message FlowGtpExtension {
  option (msg_meta).description = "Description missing in models";

  PatternFlowGtpExtensionExtensionLength extension_length = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpExtensionContents contents = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpExtensionNextExtensionHeader next_extension_header = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowGtpv2 {
  option (msg_meta).description = "GTPv2 packet header";

  PatternFlowGtpv2Version version = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv2PiggybackingFlag piggybacking_flag = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv2TeidFlag teid_flag = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv2Spare1 spare1 = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv2MessageType message_type = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv2MessageLength message_length = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv2Teid teid = 7 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv2SequenceNumber sequence_number = 8 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv2Spare2 spare2 = 9 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowArp {
  option (msg_meta).description = "ARP packet header";

  PatternFlowArpHardwareType hardware_type = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowArpProtocolType protocol_type = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowArpHardwareLength hardware_length = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowArpProtocolLength protocol_length = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowArpOperation operation = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowArpSenderHardwareAddr sender_hardware_addr = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowArpSenderProtocolAddr sender_protocol_addr = 7 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowArpTargetHardwareAddr target_hardware_addr = 8 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowArpTargetProtocolAddr target_protocol_addr = 9 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowIcmp {
  option (msg_meta).description = "ICMP packet header";

  message Choice {
    enum Enum {
      ECHO = 0;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  FlowIcmpEcho echo = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowIcmpEcho {
  option (msg_meta).description = "Packet Header for ICMP echo request\nCommon properties for ICMP packet headers that require checksum\nCommon properties for ICMP packet headers that require identifier and sequence number properties";

  PatternFlowIcmpEchoType type = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIcmpEchoCode code = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIcmpEchoChecksum checksum = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIcmpEchoIdentifier identifier = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIcmpEchoSequenceNumber sequence_number = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowIcmpv6 {
  option (msg_meta).description = "ICMPv6 packet header";

  message Choice {
    enum Enum {
      ECHO = 0;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  FlowIcmpv6Echo echo = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowIcmpv6Echo {
  option (msg_meta).description = "Packet Header for ICMPv6 Echo\nCommon properties for ICMPv6 packet headers that require checksum";

  PatternFlowIcmpv6EchoType type = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIcmpv6EchoCode code = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIcmpv6EchoIdentifier identifier = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIcmpv6EchoSequenceNumber sequence_number = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIcmpv6EchoChecksum checksum = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowPpp {
  option (msg_meta).description = "PPP packet header";

  PatternFlowPppAddress address = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPppControl control = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPppProtocolType protocol_type = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowIgmpv1 {
  option (msg_meta).description = "IGMPv1 packet header";

  PatternFlowIgmpv1Version version = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIgmpv1Type type = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIgmpv1Unused unused = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIgmpv1Checksum checksum = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIgmpv1GroupAddress group_address = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowSize {
  option (msg_meta).description = "The frame size which overrides the total length of the packet";

  message Choice {
    enum Enum {
      FIXED = 0;
      INCREMENT = 1;
      RANDOM = 2;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 fixed = 2 [
    (fld_meta).default = "64",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowSizeIncrement increment = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowSizeRandom random = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowSizeIncrement {
  option (msg_meta).description = "Frame size that increments from a starting size to  an ending size incrementing by a step size.";

  int32 start = 1 [
    (fld_meta).default = "64",
    (fld_meta).required = true,
    (fld_meta).description = "Starting frame size in bytes"
  ];

  int32 end = 2 [
    (fld_meta).default = "1518",
    (fld_meta).required = true,
    (fld_meta).description = "Ending frame size in bytes"
  ];

  int32 step = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Step frame size in bytes"
  ];
}

message FlowSizeRandom {
  option (msg_meta).description = "Random frame size from a min value to a max value.";

  int32 min = 1 [
    (fld_meta).default = "64",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 max = 2 [
    (fld_meta).default = "1518",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowRate {
  option (msg_meta).description = "The rate of packet transmission";

  message Choice {
    enum Enum {
      PPS = 0;
      BPS = 1;
      KBPS = 2;
      MBPS = 3;
      GBPS = 4;
      PERCENTAGE = 5;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.PPS",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 pps = 2 [
    (fld_meta).default = "1000",
    (fld_meta).required = false,
    (fld_meta).description = "Packets per second."
  ];

  int32 bps = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Bits per second. Default is maximum supported speed."
  ];

  double kbps = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Kilobits per second. Default is maximum supported speed."
  ];

  double mbps = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Megabits per second.  Default is maximum supported speed."
  ];

  double gbps = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Gigabits per second. Default is maximum supported speed."
  ];

  double percentage = 7 [
    (fld_meta).default = "100",
    (fld_meta).required = false,
    (fld_meta).description = "The percentage of a port location's available bandwidth."
  ];
}

message FlowDuration {
  option (msg_meta).description = "A container for different transmit durations. ";

  message Choice {
    enum Enum {
      FIXED_PACKETS = 0;
      FIXED_SECONDS = 1;
      BURST = 2;
      CONTINUOUS = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).required = true,
    (fld_meta).description = "A choice used to determine the type of duration."
  ];

  FlowFixedPackets fixed_packets = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowFixedSeconds fixed_seconds = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowBurst burst = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowContinuous continuous = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowContinuous {
  option (msg_meta).description = "Transmit will be continuous and will not stop automatically. ";

  int32 gap = 1 [
    (fld_meta).default = "12",
    (fld_meta).required = false,
    (fld_meta).description = "The minimum gap between packets expressed as bytes."
  ];

  FlowDelay delay = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowDelay {
  option (msg_meta).description = "The optional container to specify the delay before starting  transmission of packets.";

  message Choice {
    enum Enum {
      BYTES = 0;
      NANOSECONDS = 1;
      MICROSECONDS = 2;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  double bytes = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "The delay before starting transmission of packets. A value of 0 indicates no delay."
  ];

  double nanoseconds = 3 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "The delay before starting transmission of packets. A value of 0 indicates no delay."
  ];

  double microseconds = 4 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "The delay before starting transmission of packets. A value of 0 indicates no delay."
  ];
}

message FlowFixedPackets {
  option (msg_meta).description = "Transmit a fixed number of packets after which the flow will stop.";

  int32 packets = 1 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Stop transmit of the flow after this number of packets."
  ];

  int32 gap = 2 [
    (fld_meta).default = "12",
    (fld_meta).required = false,
    (fld_meta).description = "The minimum gap between packets expressed as bytes."
  ];

  FlowDelay delay = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowFixedSeconds {
  option (msg_meta).description = "Transmit for a fixed number of seconds after which the flow will stop.";

  double seconds = 1 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Stop transmit of the flow after this number of seconds."
  ];

  int32 gap = 2 [
    (fld_meta).default = "12",
    (fld_meta).required = false,
    (fld_meta).description = "The minimum gap between packets expressed as bytes."
  ];

  FlowDelay delay = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowBurst {
  option (msg_meta).description = "Transmits continuous or fixed burst of packets.  For continuous burst of packets, it will not automatically stop. For fixed burst of packets, it will stop after transmitting fixed number of bursts.      ";

  int32 bursts = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "The number of packet bursts transmitted per flow. A value of 0 implies continuous burst of packets."
  ];

  int32 packets = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "The number of packets transmitted per burst."
  ];

  int32 gap = 3 [
    (fld_meta).default = "12",
    (fld_meta).required = false,
    (fld_meta).description = "The minimum gap between packets expressed as bytes."
  ];

  FlowDurationInterBurstGap inter_burst_gap = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowDurationInterBurstGap {
  option (msg_meta).description = "The optional container for specifying a gap between bursts.";

  message Choice {
    enum Enum {
      BYTES = 0;
      NANOSECONDS = 1;
      MICROSECONDS = 2;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.BYTES",
    (fld_meta).required = true,
    (fld_meta).description = "The type of inter burst gap units."
  ];

  double bytes = 2 [
    (fld_meta).default = "12",
    (fld_meta).required = false,
    (fld_meta).description = "The amount of time between bursts expressed in bytes.\nA value of 0 indicates no gap between bursts."
  ];

  double nanoseconds = 3 [
    (fld_meta).default = "96",
    (fld_meta).required = false,
    (fld_meta).description = "The amount of time between bursts expressed in nanoseconds.\nA value of 0 indicates no gap between bursts."
  ];

  double microseconds = 4 [
    (fld_meta).default = "0.096",
    (fld_meta).required = false,
    (fld_meta).description = "The amount of time between bursts expressed in microseconds.\nA value of 0 indicates no gap between bursts."
  ];
}

message FlowMetrics {
  option (msg_meta).description = "The optional container for configuring flow metrics.";

  bool enable = 1 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "Enables flow metrics.\nEnabling this option may affect the resultant packet payload due to \nadditional instrumentation data."
  ];

  bool loss = 2 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "Enables additional flow metric loss calculation."
  ];

  bool timestamps = 3 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "Enables additional flow metric first and last timestamps."
  ];

  FlowLatencyMetrics latency = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Latency metrics."
  ];
}

message FlowLatencyMetrics {
  option (msg_meta).description = "The optional container for per flow latency metric configuration.";

  bool enable = 1 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "True to enable latency metrics using timestamps.\n\nEnabling this option may affect the resultant packet payload due to \nadditional instrumentation data."
  ];

  message Mode {
    enum Enum {
      STORE_FORWARD = 0;
      CUT_THROUGH = 1;
    }
  }
  Mode.Enum mode = 2 [
    (fld_meta).default = "Mode.Enum.STORE_FORWARD",
    (fld_meta).required = false,
    (fld_meta).description = "Select the type of latency measurement. The different types of \nlatency measurements are:\n\n\nstore_forward:\nThe time interval starting when the last bit of the frame leaves the\nsending port and ending when the first bit of the frame is seen on\nthe receiving port (LIFO).  This is based on the RFC 1242 standard.\n\n\ncut_through:\nThe time interval starting when the first bit of the frame leaves\nthe sending port and ending when the first bit of the frame is seen\non the receiving port (FIFO).  This is based on the RFC 1242 \nstandard."
  ];
}

message Event {
  option (msg_meta).description = "The optional container for event configuration.";

  bool enable = 1 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "True to enable all events. \nEnabling this option may affect the resultant packet payload due to \nadditional instrumentation data."
  ];

  EventLink link = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  EventRxRateThreshold rx_rate_threshold = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  EventRouteAdvertiseWithdraw route_advertise_withdraw = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message EventRxRateThreshold {
  option (msg_meta).description = "The optional container for rx rate threshold event configuration.";

  bool enable = 1 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "True to enable the rx_rate_threshold event. \nEnabling this option may affect the resultant packet payload due to \nadditional instrumentation data."
  ];

  double threshold = 2 [
    (fld_meta).default = "95",
    (fld_meta).required = false,
    (fld_meta).description = "True to enable notifications when the rx rate of a flow passes above \nor below the threshold value. "
  ];
}

message EventLink {
  option (msg_meta).description = "The optional container for link up/down event configuration.";

  bool enable = 1 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "True to enable notifications when a link up/down event occurs. "
  ];
}

message EventRouteAdvertiseWithdraw {
  option (msg_meta).description = "The optional container for route advertise/withdraw event configuration.";

  bool enable = 1 [
    (fld_meta).default = "False",
    (fld_meta).required = false,
    (fld_meta).description = "True to enable notifications when a route advertise/withdraw \nevent occurs. "
  ];
}

message EventRequest {
  option (msg_meta).description = "Description missing in models";

  message Type {
    enum Enum {
      LINK_DOWN = 0;
      LINK_UP = 1;
      ROUTE_WITHDRAW = 2;
      ROUTE_ADVERTISE = 3;
      FLOW_RX_RATE_ABOVE_THRESHOLD = 4;
      FLOW_RX_RATE_BELOW_THRESHOLD = 5;
    }
  }
  repeated Type.Enum type = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Constrain the events being returned by specifying event types.\nIf the list is empty then all event types will be returned. "
  ];

  repeated string source = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Constrain the events being returned by specifying event sources. \nIf the list is empty then all event sources will be returned. \n\nx-constraint:\n- /components/schemas/Port/properties/name\n- /components/schemas/Device.Bgpv4Route/name\n- /components/schemas/Device.Bgpv6Route/name\n"
  ];
}

message EventSubscription {
  option (msg_meta).description = "A container that describes what events a system should provide and \noptionally where to publish them.  ";

  EventRequest events = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string callbackurl = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Indicates where a client wants to be notified of the events set in\nthe events property.\nIf this property is empty or null then no event notifications will\nbe forwarded."
  ];
}

message ResponseError {
  option (msg_meta).description = "A list of errors that may have occurred while executing the request.";

  repeated string errors = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "A list of any system specific errors that have occurred while \nexecuting the request."
  ];
}

message ResponseWarning {
  option (msg_meta).description = "A list of warnings that have occurred while executing the request.";

  repeated string warnings = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "A list of any system specific warnings that have occurred while \nexecuting the request."
  ];
}

message ConvergenceState {
  option (msg_meta).description = "Container to specify convergence states.";

  message Choice {
    enum Enum {
      TRANSMIT = 0;
      LINK = 1;
      ROUTE = 2;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.TRANSMIT",
    (fld_meta).required = false,
    (fld_meta).description = "The state to set on the traffic generator."
  ];

  TransmitState transmit = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  LinkState link = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  RouteState route = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message LinkState {
  option (msg_meta).description = "Port link state.";

  repeated string port_names = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "The names of port objects to. An empty or null list will control all port objects.\n\nx-constraint:\n- /components/schemas/Port/properties/name\n"
  ];

  message State {
    enum Enum {
      UP = 0;
      DOWN = 1;
    }
  }
  State.Enum state = 2 [
    (fld_meta).required = true,
    (fld_meta).description = "The link state."
  ];
}

message TransmitState {
  option (msg_meta).description = "Control the transmit state of flows.";

  repeated string flow_names = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "The names of flows to which the transmit state will be applied to. If the list of flow_names is empty or null the state will be applied to all configured flows.\n\nx-constraint:\n- /components/schemas/Flow/properties/name\n"
  ];

  message State {
    enum Enum {
      START = 0;
      STOP = 1;
      PAUSE = 2;
    }
  }
  State.Enum state = 2 [
    (fld_meta).default = "State.Enum.START",
    (fld_meta).required = true,
    (fld_meta).description = "The transmit state."
  ];
}

message CaptureState {
  option (msg_meta).description = "Control port capture state";

  repeated string port_names = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "The name of ports to start capturing packets on. An empty or null list will control all port objects.\n\nx-constraint:\n- /components/schemas/Port/properties/name\n"
  ];

  message State {
    enum Enum {
      START = 0;
      STOP = 1;
    }
  }
  State.Enum state = 2 [
    (fld_meta).required = true,
    (fld_meta).description = "The capture state."
  ];
}

message RouteState {
  option (msg_meta).description = "Sets the device route state";

  repeated string names = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "The names of device route objects to control. If no names are specified then all route objects that match the x-constraint will be affected.\n\nx-constraint:\n- /components/schemas/Device.Bgpv4Route/properties/name\n- /components/schemas/Device.Bgpv6Route/properties/name\n"
  ];

  message State {
    enum Enum {
      WITHDRAW = 0;
      ADVERTISE = 1;
    }
  }
  State.Enum state = 2 [
    (fld_meta).required = true,
    (fld_meta).description = "Route specific states"
  ];
}

message ConvergenceRequest {
  option (msg_meta).description = "The request container for flow metrics or flow convergence measurements.";

  message Choice {
    enum Enum {
      METRICS = 0;
      CONVERGENCE = 1;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.METRICS",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  FlowMetricsRequest metrics = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  ConvergenceFlowRequest convergence = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message ConvergenceFlowRequest {
  option (msg_meta).description = "The container for a flow measurement request.";

  repeated string flow_names = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Flow metrics will be retrieved for these flow names.\nIf no flow names are specified then all flows will be returned.\n\nx-constraint:\n- /components/schemas/Flow/properties/name\n"
  ];

  FlowMetricGroupRequest metric_groups = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "A list of metric groups used to disaggregate flows. A metric group that does not exist for a flow group MUST return an error."
  ];
}

message FlowMetricsRequest {
  option (msg_meta).description = "The container for a flow metric request.";

  repeated string flow_names = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Flow metrics will be retrieved for these flow names.\nIf no flow names are specified then all flows will be returned.\n\nx-constraint:\n- /components/schemas/Flow/properties/name\n"
  ];

  FlowMetricGroupRequest metric_groups = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "A list of metric groups used to disaggregate flows. A metric group that does not exist for a flow group MUST return an error."
  ];

  message Metric_names {
    enum Enum {
      TRANSMIT = 0;
      FRAMES_TX = 1;
      FRAMES_RX = 2;
      BYTES_TX = 3;
      BYTES_RX = 4;
      FRAMES_TX_RATE = 5;
      FRAMES_RX_RATE = 6;
    }
  }
  repeated Metric_names.Enum metric_names = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "The list of metric names that the returned result set will contain. If the list is empty then all metrics will be returned."
  ];
}

message FlowMetricGroupRequest {
  option (msg_meta).description = "Description missing in models";

  message Choice {
    enum Enum {
      INGRESS = 0;
      EGRESS = 1;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.INGRESS",
    (fld_meta).required = false,
    (fld_meta).description = "The type of disaggregation to be applied to the flow metrics."
  ];

  repeated string ingress = 2 [
    (fld_meta).default = "[]",
    (fld_meta).required = false,
    (fld_meta).description = "Disaggregate the flow metrics by ingress packet header field names.\nIf the items is empty then no disaggregation will be done. \n\nx-constraint:\n- /components/schemas/Flow/properties/packet/../metric_group\n"
  ];

  repeated string egress = 3 [
    (fld_meta).default = "[]",
    (fld_meta).required = false,
    (fld_meta).description = "Disaggregate the flow metrics by egress packet header field names \nIf the items is empty then no disaggregation will be done. \n\nx-constraint:\n- /components/schemas/Flow/properties/egress/../metric_group\n"
  ];
}

message FlowMetric {
  option (msg_meta).description = "A container for flow metrics.\nThe container is keyed by the name, port_tx, port_rx and metric_groups\nvalues.";

  string name = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "The name of the flow"
  ];

  string port_tx = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "The name of the transmit port"
  ];

  string port_rx = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "The name of the receive port"
  ];

  repeated FlowMetricGroup metric_groups = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Flow disaggregation groups."
  ];

  message Transmit {
    enum Enum {
      STARTED = 0;
      STOPPED = 1;
      PAUSED = 2;
    }
  }
  Transmit.Enum transmit = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "The transmit state of the flow."
  ];

  int32 frames_tx = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "The current total number of frames transmitted"
  ];

  int32 frames_rx = 7 [
    (fld_meta).required = false,
    (fld_meta).description = "The current total number of valid frames received"
  ];

  int32 bytes_tx = 8 [
    (fld_meta).required = false,
    (fld_meta).description = "The current total number of bytes transmitted"
  ];

  int32 bytes_rx = 9 [
    (fld_meta).required = false,
    (fld_meta).description = "The current total number of bytes received"
  ];

  double frames_tx_rate = 10 [
    (fld_meta).required = false,
    (fld_meta).description = "The current rate of frames transmitted"
  ];

  double frames_rx_rate = 11 [
    (fld_meta).required = false,
    (fld_meta).description = "The current rate of valid frames received"
  ];

  double loss = 12 [
    (fld_meta).required = false,
    (fld_meta).description = "The percentage of lost frames"
  ];

  MetricTimestamp timestamps = 13 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  MetricLatency latency = 14 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowMetricGroup {
  option (msg_meta).description = "Description missing in models";

  string name = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Name of packet field metric group"
  ];

  string value = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Value of named packet field metric group"
  ];
}

message MetricTimestamp {
  option (msg_meta).description = "The container for timestamp metrics.\nThe container will be empty if the timestamp has not been configured for\nthe flow.";

  double first_timestamp_ns = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "First timestamp in nanoseconds"
  ];

  double last_timestamp_ns = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Last timestamp in nanoseconds"
  ];
}

message MetricLatency {
  option (msg_meta).description = "The container for latency metrics. \nThe min/max/avg values are dependent on the type of latency measurement \nmode that is configured.\nThe container will be empty if the latency has not been configured for\nthe flow.";

  double minimum_ns = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Minimum latency in nanoseconds"
  ];

  double maximum_ns = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Maximum latency in nanoseconds"
  ];

  double average_ns = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Average latency in nanoseconds"
  ];
}

message ConvergenceResponse {
  option (msg_meta).description = "Description missing in models";

  message Choice {
    enum Enum {
      FLOW_METRIC = 0;
      FLOW_CONVERGENCE = 1;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated FlowMetric flow_metric = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated ConvergenceFlow flow_convergence = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message ConvergenceFlow {
  option (msg_meta).description = "The container for convergence measurements";

  string name = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "The name of a flow. "
  ];

  string port_tx = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "The name of the transmit port"
  ];

  string port_rx = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "The name of the receive port"
  ];

  repeated FlowMetricGroup metric_groups = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "Flow disaggregation groups."
  ];

  double data_plane_convergence_us = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "The convergence time measured from the data plane perspective only. \nIt measures the time from BTT, when the rate on Test Port 2 crosses \nbelow the Rx Threshold until an acceptable amount of traffic was \nreceived at time ATT, when the rate crosses above the configured \nrx_rate_threshold."
  ];

  double control_plane_data_plane_convergence_us = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "The total convergence time, between the event that caused the\nswitchover (at tEvent) until an acceptable amount of traffic was \nreceived at time ATT, when the rate crosses above the configured \nrx_rate_threshold."
  ];

  double service_interruption_time_us = 7 [
    (fld_meta).required = false,
    (fld_meta).description = "Service interruption time is the flow_rx_rate_above_threshold minus \nthe flow_rx_rate_below_threshold."
  ];

  repeated ConvergenceEvent events = 8 [
    (fld_meta).required = false,
    (fld_meta).description = "The events that were used to determine the convergence analytics."
  ];
}

message ConvergenceEvent {
  option (msg_meta).description = "A container for an event that has occurred in the system.";

  message Type {
    enum Enum {
      LINK_DOWN = 0;
      LINK_UP = 1;
      ROUTE_WITHDRAW = 2;
      ROUTE_ADVERTISE = 3;
      FLOW_RX_RATE_ABOVE_THRESHOLD = 4;
      FLOW_RX_RATE_BELOW_THRESHOLD = 5;
    }
  }
  Type.Enum type = 1 [
    (fld_meta).required = false,
    (fld_meta).description = "The type of event that occurred."
  ];

  string source = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "The source of the event. \nThe source MUST be the value of one of the x-constraint paths,\nwhich means the source MUST be a unique name in the configuration. \n\nx-constraint:\n- /components/schemas/Port/properties/name\n- /components/schemas/Flow/properties/name\n- /components/schemas/Device.Bgpv4Route/properties/name\n- /components/schemas/Device.Bgpv6Route/properties/name\n"
  ];

  double begin_timestamp_ns = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "The time in nanoseconds at which the event began"
  ];

  double end_timestamp_ns = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "The time in nanoseconds at which the event ended"
  ];
}

message PatternFlowEthernetDstCounter {
  option (msg_meta).description = "mac counter pattern";

  string start = 1 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string step = 2 [
    (fld_meta).default = "00:00:00:00:00:01",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetDst {
  option (msg_meta).description = "Destination MAC address";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string value = 2 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowEthernetDstCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowEthernetDstCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetSrcCounter {
  option (msg_meta).description = "mac counter pattern";

  string start = 1 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string step = 2 [
    (fld_meta).default = "00:00:00:00:00:01",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetSrc {
  option (msg_meta).description = "Source MAC address";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string value = 2 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowEthernetSrcCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowEthernetSrcCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetEtherTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "65535",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetEtherType {
  option (msg_meta).description = "Ethernet type";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      AUTO = 2;
      INCREMENT = 3;
      DECREMENT = 4;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.AUTO",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "65535",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  message Auto {
    enum Enum {
      AUTO = 0;
    }
  }
  Auto.Enum auto = 4 [
    (fld_meta).default = "Auto.Enum.AUTO",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowEthernetEtherTypeCounter increment = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowEthernetEtherTypeCounter decrement = 7 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPfcQueueCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPfcQueue {
  option (msg_meta).description = "Priority flow control queue";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowEthernetPfcQueueCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowEthernetPfcQueueCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVlanPriorityCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVlanPriority {
  option (msg_meta).description = "Priority code point";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowVlanPriorityCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowVlanPriorityCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVlanCfiCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVlanCfi {
  option (msg_meta).description = "Canonical format indicator or drop elegible indicator";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowVlanCfiCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowVlanCfiCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVlanIdCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVlanId {
  option (msg_meta).description = "Vlan identifier";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowVlanIdCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowVlanIdCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVlanTpidCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "33024",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVlanTpid {
  option (msg_meta).description = "Protocol identifier";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "33024",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowVlanTpidCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowVlanTpidCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVxlanFlagsCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "8",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVxlanFlags {
  option (msg_meta).description = "Flags field with a bit format of RRRRIRRR. The I flag MUST be set to 1 for a valid vxlan network id (VNI).   The other 7 bits (designated R) are reserved fields and MUST be  set to zero on transmission and ignored on receipt.";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "8",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowVxlanFlagsCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowVxlanFlagsCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVxlanReserved0Counter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVxlanReserved0 {
  option (msg_meta).description = "Reserved field";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowVxlanReserved0Counter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowVxlanReserved0Counter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVxlanVniCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVxlanVni {
  option (msg_meta).description = "VXLAN network id";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowVxlanVniCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowVxlanVniCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVxlanReserved1Counter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVxlanReserved1 {
  option (msg_meta).description = "Reserved field";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowVxlanReserved1Counter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowVxlanReserved1Counter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4VersionCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "4",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4Version {
  option (msg_meta).description = "Version";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "4",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv4VersionCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4VersionCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4HeaderLengthCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "5",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4HeaderLength {
  option (msg_meta).description = "Header length";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      AUTO = 2;
      INCREMENT = 3;
      DECREMENT = 4;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.AUTO",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "5",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  message Auto {
    enum Enum {
      AUTO = 0;
    }
  }
  Auto.Enum auto = 4 [
    (fld_meta).default = "Auto.Enum.AUTO",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv4HeaderLengthCounter increment = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4HeaderLengthCounter decrement = 7 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TotalLengthCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "46",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TotalLength {
  option (msg_meta).description = "Total length";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      AUTO = 2;
      INCREMENT = 3;
      DECREMENT = 4;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.AUTO",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "46",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  message Auto {
    enum Enum {
      AUTO = 0;
    }
  }
  Auto.Enum auto = 4 [
    (fld_meta).default = "Auto.Enum.AUTO",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv4TotalLengthCounter increment = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4TotalLengthCounter decrement = 7 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4IdentificationCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4Identification {
  option (msg_meta).description = "Identification";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv4IdentificationCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4IdentificationCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4ReservedCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4Reserved {
  option (msg_meta).description = "Reserved flag.";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv4ReservedCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4ReservedCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4DontFragmentCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4DontFragment {
  option (msg_meta).description = "Dont fragment flag If the dont_fragment flag is set and fragmentation is required to route the packet then the packet is dropped.";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv4DontFragmentCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4DontFragmentCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4MoreFragmentsCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4MoreFragments {
  option (msg_meta).description = "More fragments flag";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv4MoreFragmentsCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4MoreFragmentsCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4FragmentOffsetCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4FragmentOffset {
  option (msg_meta).description = "Fragment offset";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv4FragmentOffsetCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4FragmentOffsetCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TimeToLiveCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "64",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TimeToLive {
  option (msg_meta).description = "Time to live";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "64",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv4TimeToLiveCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4TimeToLiveCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4ProtocolCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "61",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4Protocol {
  option (msg_meta).description = "Protocol, default is 61 any host internal protocol";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "61",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv4ProtocolCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4ProtocolCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4HeaderChecksum {
  option (msg_meta).description = "Header checksum";

  message Choice {
    enum Enum {
      GENERATED = 0;
      CUSTOM = 1;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.GENERATED",
    (fld_meta).required = true,
    (fld_meta).description = "The type of checksum"
  ];

  message Generated {
    enum Enum {
      GOOD = 0;
      BAD = 1;
    }
  }
  Generated.Enum generated = 2 [
    (fld_meta).default = "Generated.Enum.GOOD",
    (fld_meta).required = false,
    (fld_meta).description = "A system generated checksum value"
  ];

  int32 custom = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "A custom checksum value"
  ];
}

message PatternFlowIpv4SrcCounter {
  option (msg_meta).description = "ipv4 counter pattern";

  string start = 1 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string step = 2 [
    (fld_meta).default = "0.0.0.1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4Src {
  option (msg_meta).description = "Source address";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string value = 2 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv4SrcCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4SrcCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4DstCounter {
  option (msg_meta).description = "ipv4 counter pattern";

  string start = 1 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string step = 2 [
    (fld_meta).default = "0.0.0.1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4Dst {
  option (msg_meta).description = "Destination address";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string value = 2 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv4DstCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4DstCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4PriorityRawCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4PriorityRaw {
  option (msg_meta).description = "Raw priority";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv4PriorityRawCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4PriorityRawCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4DscpPhbCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4DscpPhb {
  option (msg_meta).description = "Per hop behavior";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv4DscpPhbCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4DscpPhbCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4DscpEcnCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4DscpEcn {
  option (msg_meta).description = "Explicit congestion notification";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv4DscpEcnCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4DscpEcnCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosPrecedenceCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosPrecedence {
  option (msg_meta).description = "Precedence";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv4TosPrecedenceCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4TosPrecedenceCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosDelayCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosDelay {
  option (msg_meta).description = "Delay";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv4TosDelayCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4TosDelayCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosThroughputCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosThroughput {
  option (msg_meta).description = "Throughput";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv4TosThroughputCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4TosThroughputCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosReliabilityCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosReliability {
  option (msg_meta).description = "Reliability";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv4TosReliabilityCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4TosReliabilityCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosMonetaryCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosMonetary {
  option (msg_meta).description = "Monetary";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv4TosMonetaryCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4TosMonetaryCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosUnusedCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosUnused {
  option (msg_meta).description = "Unused";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv4TosUnusedCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv4TosUnusedCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6VersionCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "6",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6Version {
  option (msg_meta).description = "Version number";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "6",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv6VersionCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv6VersionCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6TrafficClassCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6TrafficClass {
  option (msg_meta).description = "Traffic class";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv6TrafficClassCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv6TrafficClassCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6FlowLabelCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6FlowLabel {
  option (msg_meta).description = "Flow label";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv6FlowLabelCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv6FlowLabelCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6PayloadLengthCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6PayloadLength {
  option (msg_meta).description = "Payload length";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      AUTO = 2;
      INCREMENT = 3;
      DECREMENT = 4;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.AUTO",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  message Auto {
    enum Enum {
      AUTO = 0;
    }
  }
  Auto.Enum auto = 4 [
    (fld_meta).default = "Auto.Enum.AUTO",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv6PayloadLengthCounter increment = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv6PayloadLengthCounter decrement = 7 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6NextHeaderCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "59",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6NextHeader {
  option (msg_meta).description = "Next header";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "59",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv6NextHeaderCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv6NextHeaderCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6HopLimitCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "64",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6HopLimit {
  option (msg_meta).description = "Hop limit";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "64",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv6HopLimitCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv6HopLimitCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6SrcCounter {
  option (msg_meta).description = "ipv6 counter pattern";

  string start = 1 [
    (fld_meta).default = "::0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string step = 2 [
    (fld_meta).default = "::1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6Src {
  option (msg_meta).description = "Source address";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string value = 2 [
    (fld_meta).default = "::0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv6SrcCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv6SrcCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6DstCounter {
  option (msg_meta).description = "ipv6 counter pattern";

  string start = 1 [
    (fld_meta).default = "::0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string step = 2 [
    (fld_meta).default = "::1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6Dst {
  option (msg_meta).description = "Destination address";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string value = 2 [
    (fld_meta).default = "::0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIpv6DstCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIpv6DstCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPauseDstCounter {
  option (msg_meta).description = "mac counter pattern";

  string start = 1 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string step = 2 [
    (fld_meta).default = "00:00:00:00:00:01",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPauseDst {
  option (msg_meta).description = "Destination MAC address";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string value = 2 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowPfcPauseDstCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPauseDstCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPauseSrcCounter {
  option (msg_meta).description = "mac counter pattern";

  string start = 1 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string step = 2 [
    (fld_meta).default = "00:00:00:00:00:01",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPauseSrc {
  option (msg_meta).description = "Source MAC address";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string value = 2 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowPfcPauseSrcCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPauseSrcCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPauseEtherTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "34824",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPauseEtherType {
  option (msg_meta).description = "Ethernet type";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "34824",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowPfcPauseEtherTypeCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPauseEtherTypeCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPauseControlOpCodeCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "257",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPauseControlOpCode {
  option (msg_meta).description = "Control operation code";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "257",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowPfcPauseControlOpCodeCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPauseControlOpCodeCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPauseClassEnableVectorCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPauseClassEnableVector {
  option (msg_meta).description = "Destination";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowPfcPauseClassEnableVectorCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPauseClassEnableVectorCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass0Counter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass0 {
  option (msg_meta).description = "Pause class 0";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowPfcPausePauseClass0Counter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPausePauseClass0Counter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass1Counter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass1 {
  option (msg_meta).description = "Pause class 1";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowPfcPausePauseClass1Counter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPausePauseClass1Counter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass2Counter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass2 {
  option (msg_meta).description = "Pause class 2";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowPfcPausePauseClass2Counter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPausePauseClass2Counter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass3Counter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass3 {
  option (msg_meta).description = "Pause class 3";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowPfcPausePauseClass3Counter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPausePauseClass3Counter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass4Counter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass4 {
  option (msg_meta).description = "Pause class 4";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowPfcPausePauseClass4Counter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPausePauseClass4Counter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass5Counter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass5 {
  option (msg_meta).description = "Pause class 5";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowPfcPausePauseClass5Counter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPausePauseClass5Counter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass6Counter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass6 {
  option (msg_meta).description = "Pause class 6";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowPfcPausePauseClass6Counter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPausePauseClass6Counter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass7Counter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass7 {
  option (msg_meta).description = "Pause class 7";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowPfcPausePauseClass7Counter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPfcPausePauseClass7Counter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPauseDstCounter {
  option (msg_meta).description = "mac counter pattern";

  string start = 1 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string step = 2 [
    (fld_meta).default = "00:00:00:00:00:01",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPauseDst {
  option (msg_meta).description = "Destination MAC address";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string value = 2 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowEthernetPauseDstCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowEthernetPauseDstCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPauseSrcCounter {
  option (msg_meta).description = "mac counter pattern";

  string start = 1 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string step = 2 [
    (fld_meta).default = "00:00:00:00:00:01",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPauseSrc {
  option (msg_meta).description = "Source MAC address";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string value = 2 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowEthernetPauseSrcCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowEthernetPauseSrcCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPauseEtherTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "34824",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPauseEtherType {
  option (msg_meta).description = "Ethernet type";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "34824",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowEthernetPauseEtherTypeCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowEthernetPauseEtherTypeCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPauseControlOpCodeCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPauseControlOpCode {
  option (msg_meta).description = "Control operation code";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowEthernetPauseControlOpCodeCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowEthernetPauseControlOpCodeCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPauseTimeCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPauseTime {
  option (msg_meta).description = "Time";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowEthernetPauseTimeCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowEthernetPauseTimeCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpSrcPortCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpSrcPort {
  option (msg_meta).description = "Source port";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowTcpSrcPortCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpSrcPortCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpDstPortCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpDstPort {
  option (msg_meta).description = "Destination port";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowTcpDstPortCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpDstPortCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpSeqNumCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpSeqNum {
  option (msg_meta).description = "Sequence number";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowTcpSeqNumCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpSeqNumCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpAckNumCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpAckNum {
  option (msg_meta).description = "Acknowledgement number";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowTcpAckNumCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpAckNumCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpDataOffsetCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpDataOffset {
  option (msg_meta).description = "The number of 32 bit words in the TCP header. This indicates where the data begins.";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowTcpDataOffsetCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpDataOffsetCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpEcnNsCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpEcnNs {
  option (msg_meta).description = "Explicit congestion notification, concealment protection.";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowTcpEcnNsCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpEcnNsCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpEcnCwrCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpEcnCwr {
  option (msg_meta).description = "Explicit congestion notification, congestion window reduced.";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowTcpEcnCwrCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpEcnCwrCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpEcnEchoCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpEcnEcho {
  option (msg_meta).description = "Explicit congestion notification, echo. 1 indicates the peer is ecn capable. 0 indicates that a packet with ipv4.ecn = 11 in the ip header was  received during normal transmission.";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowTcpEcnEchoCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpEcnEchoCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlUrgCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlUrg {
  option (msg_meta).description = "A value of 1 indicates that the urgent pointer field is significant.";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowTcpCtlUrgCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpCtlUrgCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlAckCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlAck {
  option (msg_meta).description = "A value of 1 indicates that the ackknowledgment field is significant.";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowTcpCtlAckCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpCtlAckCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlPshCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlPsh {
  option (msg_meta).description = "Asks to push the buffered data to the receiving application. ";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowTcpCtlPshCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpCtlPshCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlRstCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlRst {
  option (msg_meta).description = "Reset the connection. ";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowTcpCtlRstCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpCtlRstCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlSynCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlSyn {
  option (msg_meta).description = "Synchronize sequenece numbers. ";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowTcpCtlSynCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpCtlSynCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlFinCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlFin {
  option (msg_meta).description = "Last packet from the sender. ";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowTcpCtlFinCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpCtlFinCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpWindowCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpWindow {
  option (msg_meta).description = "Tcp connection window.";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowTcpWindowCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowTcpWindowCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowUdpSrcPortCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowUdpSrcPort {
  option (msg_meta).description = "Source port";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowUdpSrcPortCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowUdpSrcPortCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowUdpDstPortCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowUdpDstPort {
  option (msg_meta).description = "Destination port";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowUdpDstPortCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowUdpDstPortCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowUdpLengthCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowUdpLength {
  option (msg_meta).description = "Length";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowUdpLengthCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowUdpLengthCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowUdpChecksum {
  option (msg_meta).description = "UDP checksum";

  message Choice {
    enum Enum {
      GENERATED = 0;
      CUSTOM = 1;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.GENERATED",
    (fld_meta).required = true,
    (fld_meta).description = "The type of checksum"
  ];

  message Generated {
    enum Enum {
      GOOD = 0;
      BAD = 1;
    }
  }
  Generated.Enum generated = 2 [
    (fld_meta).default = "Generated.Enum.GOOD",
    (fld_meta).required = false,
    (fld_meta).description = "A system generated checksum value"
  ];

  int32 custom = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "A custom checksum value"
  ];
}

message PatternFlowGreChecksumPresentCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGreChecksumPresent {
  option (msg_meta).description = "Checksum present bit";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGreChecksumPresentCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGreChecksumPresentCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGreReserved0Counter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGreReserved0 {
  option (msg_meta).description = "Reserved bits";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGreReserved0Counter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGreReserved0Counter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGreVersionCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGreVersion {
  option (msg_meta).description = "GRE version number";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGreVersionCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGreVersionCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGreProtocolCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "2048",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGreProtocol {
  option (msg_meta).description = "Protocol type of encapsulated payload";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "2048",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGreProtocolCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGreProtocolCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGreChecksum {
  option (msg_meta).description = "Optional checksum of GRE header and payload. Only present if the checksum_present bit is set.";

  message Choice {
    enum Enum {
      GENERATED = 0;
      CUSTOM = 1;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.GENERATED",
    (fld_meta).required = true,
    (fld_meta).description = "The type of checksum"
  ];

  message Generated {
    enum Enum {
      GOOD = 0;
      BAD = 1;
    }
  }
  Generated.Enum generated = 2 [
    (fld_meta).default = "Generated.Enum.GOOD",
    (fld_meta).required = false,
    (fld_meta).description = "A system generated checksum value"
  ];

  int32 custom = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "A custom checksum value"
  ];
}

message PatternFlowGreReserved1Counter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGreReserved1 {
  option (msg_meta).description = "Optional reserved field. Only present if the checksum_present bit is set.";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGreReserved1Counter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGreReserved1Counter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1VersionCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1Version {
  option (msg_meta).description = "GTPv1 version";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpv1VersionCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv1VersionCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1ProtocolTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1ProtocolType {
  option (msg_meta).description = "Protocol type, GTP is 1, GTP' is 0";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpv1ProtocolTypeCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv1ProtocolTypeCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1ReservedCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1Reserved {
  option (msg_meta).description = "Reserved field";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpv1ReservedCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv1ReservedCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1EFlagCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1EFlag {
  option (msg_meta).description = "Extension header field present";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpv1EFlagCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv1EFlagCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1SFlagCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1SFlag {
  option (msg_meta).description = "Sequence number field present";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpv1SFlagCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv1SFlagCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1PnFlagCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1PnFlag {
  option (msg_meta).description = "N-PDU field present";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpv1PnFlagCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv1PnFlagCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1MessageTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1MessageType {
  option (msg_meta).description = "The type of GTP message Different types of messages are defined in 3GPP TS 29.060 section 7.1";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpv1MessageTypeCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv1MessageTypeCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1MessageLengthCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1MessageLength {
  option (msg_meta).description = "The length of the payload (the bytes following the mandatory 8-byte GTP header) in bytes that includes any optional fields";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpv1MessageLengthCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv1MessageLengthCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1TeidCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1Teid {
  option (msg_meta).description = "Tunnel endpoint identifier (TEID) used to multiplex connections in the same GTP tunnel";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpv1TeidCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv1TeidCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1SquenceNumberCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1SquenceNumber {
  option (msg_meta).description = "Sequence number. Exists if any of the e_flag, s_flag, or pn_flag bits are on.  Must be interpreted only if the s_flag bit is on.";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpv1SquenceNumberCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv1SquenceNumberCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1NPduNumberCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1NPduNumber {
  option (msg_meta).description = "N-PDU number. Exists if any of the e_flag, s_flag, or pn_flag bits are on.  Must be interpreted only if the pn_flag bit is on.";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpv1NPduNumberCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv1NPduNumberCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1NextExtensionHeaderTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1NextExtensionHeaderType {
  option (msg_meta).description = "Next extension header. Exists if any of the e_flag, s_flag, or pn_flag bits are on.  Must be interpreted only if the e_flag bit is on.";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpv1NextExtensionHeaderTypeCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv1NextExtensionHeaderTypeCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpExtensionExtensionLengthCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpExtensionExtensionLength {
  option (msg_meta).description = "This field states the length of this extension header,  including the length, the contents, and the next extension header field, in 4-octet units, so the length of the extension must  always be a multiple of 4.";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpExtensionExtensionLengthCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpExtensionExtensionLengthCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpExtensionContentsCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpExtensionContents {
  option (msg_meta).description = "The extension header contents";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpExtensionContentsCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpExtensionContentsCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpExtensionNextExtensionHeaderCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpExtensionNextExtensionHeader {
  option (msg_meta).description = "It states the type of the next extension, or 0 if no next  extension exists.  This permits chaining several next extension headers.";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpExtensionNextExtensionHeaderCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpExtensionNextExtensionHeaderCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2VersionCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "2",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2Version {
  option (msg_meta).description = "Version number";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "2",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpv2VersionCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv2VersionCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2PiggybackingFlagCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2PiggybackingFlag {
  option (msg_meta).description = "If piggybacking_flag is set to 1 then another GTP-C message with its own header shall be present at the end of the current message";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpv2PiggybackingFlagCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv2PiggybackingFlagCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2TeidFlagCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2TeidFlag {
  option (msg_meta).description = "If teid_flag is set to 1 then the TEID field will be present  between the message length and the sequence number. All messages except Echo and Echo reply require TEID to be present";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpv2TeidFlagCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv2TeidFlagCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2Spare1Counter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2Spare1 {
  option (msg_meta).description = "A 3-bit reserved field (must be 0).";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpv2Spare1Counter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv2Spare1Counter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2MessageTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2MessageType {
  option (msg_meta).description = "An 8-bit field that indicates the type of GTP message. Different types of messages are defined in 3GPP TS 29.060 section 7.1";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpv2MessageTypeCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv2MessageTypeCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2MessageLengthCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2MessageLength {
  option (msg_meta).description = "A 16-bit field that indicates the length of the payload in bytes, excluding the mandatory GTP-c header (first 4 bytes). Includes the TEID and sequence_number if they are present.";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpv2MessageLengthCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv2MessageLengthCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2TeidCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2Teid {
  option (msg_meta).description = "Tunnel endpoint identifier. A 32-bit (4-octet) field used to multiplex different connections in the same GTP tunnel. Is present only if the teid_flag is set.";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpv2TeidCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv2TeidCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2SequenceNumberCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2SequenceNumber {
  option (msg_meta).description = "The sequence number";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpv2SequenceNumberCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv2SequenceNumberCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2Spare2Counter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2Spare2 {
  option (msg_meta).description = "Reserved field";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowGtpv2Spare2Counter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowGtpv2Spare2Counter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpHardwareTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpHardwareType {
  option (msg_meta).description = "Network link protocol type";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowArpHardwareTypeCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowArpHardwareTypeCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpProtocolTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "2048",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpProtocolType {
  option (msg_meta).description = "The internetwork protocol for which the ARP request is intended";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "2048",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowArpProtocolTypeCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowArpProtocolTypeCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpHardwareLengthCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "6",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpHardwareLength {
  option (msg_meta).description = "Length (in octets) of a hardware address";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "6",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowArpHardwareLengthCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowArpHardwareLengthCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpProtocolLengthCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "4",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpProtocolLength {
  option (msg_meta).description = "Length (in octets) of internetwork addresses";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "4",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowArpProtocolLengthCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowArpProtocolLengthCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpOperationCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpOperation {
  option (msg_meta).description = "The operation that the sender is performing";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowArpOperationCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowArpOperationCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpSenderHardwareAddrCounter {
  option (msg_meta).description = "mac counter pattern";

  string start = 1 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string step = 2 [
    (fld_meta).default = "00:00:00:00:00:01",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpSenderHardwareAddr {
  option (msg_meta).description = "Media address of the sender";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string value = 2 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowArpSenderHardwareAddrCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowArpSenderHardwareAddrCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpSenderProtocolAddrCounter {
  option (msg_meta).description = "ipv4 counter pattern";

  string start = 1 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string step = 2 [
    (fld_meta).default = "0.0.0.1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpSenderProtocolAddr {
  option (msg_meta).description = "Internetwork address of the sender";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string value = 2 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowArpSenderProtocolAddrCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowArpSenderProtocolAddrCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpTargetHardwareAddrCounter {
  option (msg_meta).description = "mac counter pattern";

  string start = 1 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string step = 2 [
    (fld_meta).default = "00:00:00:00:00:01",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpTargetHardwareAddr {
  option (msg_meta).description = "Media address of the target";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string value = 2 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowArpTargetHardwareAddrCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowArpTargetHardwareAddrCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpTargetProtocolAddrCounter {
  option (msg_meta).description = "ipv4 counter pattern";

  string start = 1 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string step = 2 [
    (fld_meta).default = "0.0.0.1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpTargetProtocolAddr {
  option (msg_meta).description = "Internetwork address of the target";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string value = 2 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowArpTargetProtocolAddrCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowArpTargetProtocolAddrCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpEchoTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "8",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpEchoType {
  option (msg_meta).description = "The type of ICMP echo packet";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "8",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIcmpEchoTypeCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIcmpEchoTypeCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpEchoCodeCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpEchoCode {
  option (msg_meta).description = "The ICMP subtype.  The default code for ICMP echo request and reply is 0.";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIcmpEchoCodeCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIcmpEchoCodeCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpEchoChecksum {
  option (msg_meta).description = "ICMP checksum";

  message Choice {
    enum Enum {
      GENERATED = 0;
      CUSTOM = 1;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.GENERATED",
    (fld_meta).required = true,
    (fld_meta).description = "The type of checksum"
  ];

  message Generated {
    enum Enum {
      GOOD = 0;
      BAD = 1;
    }
  }
  Generated.Enum generated = 2 [
    (fld_meta).default = "Generated.Enum.GOOD",
    (fld_meta).required = false,
    (fld_meta).description = "A system generated checksum value"
  ];

  int32 custom = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "A custom checksum value"
  ];
}

message PatternFlowIcmpEchoIdentifierCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpEchoIdentifier {
  option (msg_meta).description = "ICMP identifier";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIcmpEchoIdentifierCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIcmpEchoIdentifierCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpEchoSequenceNumberCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpEchoSequenceNumber {
  option (msg_meta).description = "ICMP sequence number";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIcmpEchoSequenceNumberCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIcmpEchoSequenceNumberCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpCommonChecksum {
  option (msg_meta).description = "ICMP checksum";

  message Choice {
    enum Enum {
      GENERATED = 0;
      CUSTOM = 1;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.GENERATED",
    (fld_meta).required = true,
    (fld_meta).description = "The type of checksum"
  ];

  message Generated {
    enum Enum {
      GOOD = 0;
      BAD = 1;
    }
  }
  Generated.Enum generated = 2 [
    (fld_meta).default = "Generated.Enum.GOOD",
    (fld_meta).required = false,
    (fld_meta).description = "A system generated checksum value"
  ];

  int32 custom = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "A custom checksum value"
  ];
}

message PatternFlowIcmpNextFieldsIdentifierCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpNextFieldsIdentifier {
  option (msg_meta).description = "ICMP identifier";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIcmpNextFieldsIdentifierCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIcmpNextFieldsIdentifierCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpNextFieldsSequenceNumberCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpNextFieldsSequenceNumber {
  option (msg_meta).description = "ICMP sequence number";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIcmpNextFieldsSequenceNumberCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIcmpNextFieldsSequenceNumberCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpv6EchoTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "128",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpv6EchoType {
  option (msg_meta).description = "ICMPv6 echo type";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "128",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIcmpv6EchoTypeCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIcmpv6EchoTypeCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpv6EchoCodeCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpv6EchoCode {
  option (msg_meta).description = "ICMPv6 echo sub type";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIcmpv6EchoCodeCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIcmpv6EchoCodeCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpv6EchoIdentifierCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpv6EchoIdentifier {
  option (msg_meta).description = "ICMPv6 echo identifier";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIcmpv6EchoIdentifierCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIcmpv6EchoIdentifierCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpv6EchoSequenceNumberCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpv6EchoSequenceNumber {
  option (msg_meta).description = "ICMPv6 echo sequence number";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIcmpv6EchoSequenceNumberCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIcmpv6EchoSequenceNumberCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpv6EchoChecksum {
  option (msg_meta).description = "ICMPv6 checksum";

  message Choice {
    enum Enum {
      GENERATED = 0;
      CUSTOM = 1;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.GENERATED",
    (fld_meta).required = true,
    (fld_meta).description = "The type of checksum"
  ];

  message Generated {
    enum Enum {
      GOOD = 0;
      BAD = 1;
    }
  }
  Generated.Enum generated = 2 [
    (fld_meta).default = "Generated.Enum.GOOD",
    (fld_meta).required = false,
    (fld_meta).description = "A system generated checksum value"
  ];

  int32 custom = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "A custom checksum value"
  ];
}

message PatternFlowIcmpv6CommonChecksum {
  option (msg_meta).description = "ICMPv6 checksum";

  message Choice {
    enum Enum {
      GENERATED = 0;
      CUSTOM = 1;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.GENERATED",
    (fld_meta).required = true,
    (fld_meta).description = "The type of checksum"
  ];

  message Generated {
    enum Enum {
      GOOD = 0;
      BAD = 1;
    }
  }
  Generated.Enum generated = 2 [
    (fld_meta).default = "Generated.Enum.GOOD",
    (fld_meta).required = false,
    (fld_meta).description = "A system generated checksum value"
  ];

  int32 custom = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "A custom checksum value"
  ];
}

message PatternFlowPppAddressCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "255",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPppAddress {
  option (msg_meta).description = "PPP address";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "255",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowPppAddressCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPppAddressCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPppControlCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "3",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPppControl {
  option (msg_meta).description = "PPP control";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "3",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowPppControlCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPppControlCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPppProtocolTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPppProtocolType {
  option (msg_meta).description = "PPP protocol type";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      AUTO = 2;
      INCREMENT = 3;
      DECREMENT = 4;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.AUTO",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  message Auto {
    enum Enum {
      AUTO = 0;
    }
  }
  Auto.Enum auto = 4 [
    (fld_meta).default = "Auto.Enum.AUTO",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowPppProtocolTypeCounter increment = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowPppProtocolTypeCounter decrement = 7 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIgmpv1VersionCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIgmpv1Version {
  option (msg_meta).description = "Version number";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIgmpv1VersionCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIgmpv1VersionCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIgmpv1TypeCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "17",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIgmpv1Type {
  option (msg_meta).description = "Type of message";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "17",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIgmpv1TypeCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIgmpv1TypeCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIgmpv1UnusedCounter {
  option (msg_meta).description = "integer counter pattern";

  int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIgmpv1Unused {
  option (msg_meta).description = "Unused";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIgmpv1UnusedCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIgmpv1UnusedCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIgmpv1Checksum {
  option (msg_meta).description = "Checksum";

  message Choice {
    enum Enum {
      GENERATED = 0;
      CUSTOM = 1;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.GENERATED",
    (fld_meta).required = true,
    (fld_meta).description = "The type of checksum"
  ];

  message Generated {
    enum Enum {
      GOOD = 0;
      BAD = 1;
    }
  }
  Generated.Enum generated = 2 [
    (fld_meta).default = "Generated.Enum.GOOD",
    (fld_meta).required = false,
    (fld_meta).description = "A system generated checksum value"
  ];

  int32 custom = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "A custom checksum value"
  ];
}

message PatternFlowIgmpv1GroupAddressCounter {
  option (msg_meta).description = "ipv4 counter pattern";

  string start = 1 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string step = 2 [
    (fld_meta).default = "0.0.0.1",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIgmpv1GroupAddress {
  option (msg_meta).description = "Group address";

  message Choice {
    enum Enum {
      VALUE = 0;
      VALUES = 1;
      INCREMENT = 2;
      DECREMENT = 3;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.VALUE",
    (fld_meta).required = true,
    (fld_meta).description = "Description missing in models"
  ];

  string value = 2 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  string metric_group = 4 [
    (fld_meta).required = false,
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  PatternFlowIgmpv1GroupAddressCounter increment = 5 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];

  PatternFlowIgmpv1GroupAddressCounter decrement = 6 [
    (fld_meta).required = false,
    (fld_meta).description = "Description missing in models"
  ];
}

message SetConfigRequest {
  ConvergenceConfig convergenceconfig = 1;
}

message SetConfigResponse {
  message StatusCode200 {
  }
  message StatusCode400 {
  }
  message StatusCode500 {
  }
  oneof statuscode {
    StatusCode200 statuscode200 = 1;
    StatusCode400 statuscode400 = 2;
    StatusCode500 statuscode500 = 3;
  }
}

message SetStateRequest {
  ConvergenceState convergencestate = 1;
}

message SetStateResponse {
  message StatusCode200 {
  }
  message StatusCode400 {
  }
  message StatusCode500 {
  }
  oneof statuscode {
    StatusCode200 statuscode200 = 1;
    StatusCode400 statuscode400 = 2;
    StatusCode500 statuscode500 = 3;
  }
}

message GetResultsRequest {
  ConvergenceRequest convergencerequest = 1;
}

message GetResultsResponse {
  message StatusCode200 {
    ConvergenceResponse convergenceresponse = 1;
  }
  message StatusCode400 {
  }
  message StatusCode500 {
  }
  oneof statuscode {
    StatusCode200 statuscode200 = 1;
    StatusCode400 statuscode400 = 2;
    StatusCode500 statuscode500 = 3;
  }
}

service Openapi {
  option (svc_meta).description = "Description missing in models";

  rpc SetConfig(SetConfigRequest) returns (SetConfigResponse) {
    option (rpc_meta).description = "Sets the configuration of a traffic generator for convergence measurements.";
  }
  rpc SetState(SetStateRequest) returns (SetStateResponse) {
    option (rpc_meta).description = "Updates the state of the traffic generator.";
  }
  rpc GetResults(GetResultsRequest) returns (GetResultsResponse) {
    option (rpc_meta).description = "Request flow metrics or flow convergence measurements.";
  }
}
